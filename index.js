if ("serviceWorker" in navigator) {
  navigator.serviceWorker
    .register("./service-worker.js")
    .then(() => console.log("Service Worker registrado correctamente."))
    .catch((err) => console.log("Error al registrar el Service Worker:", err));
}

// =============================
// Variables principales
// =============================
document.getElementById("opciones-combobox").value = "(51P) / 67P-1"; // Valor por defecto
document.getElementById("opciones-combobox-Nuevo").value = "Sobrecorriente de fases 51P"; // Valor por defecto

const viewFormatos = document.getElementById("viewFormatos");
const viewHistorial = document.getElementById("viewHistorial");
const viewParte1 = document.getElementById("viewParte1");
const viewParte2 = document.getElementById("viewParte2");
const viewParte3 = document.getElementById("viewParte3");
const mainTabs = document.getElementById("main-tabs");
const header = document.querySelector("header");

const btnFormatos = document.getElementById("btnFormatos");
const btnHistorial = document.getElementById("btnHistorial");
const nextButton = document.getElementById("next-button");
const backButton = document.getElementById("back-button");
const backButton1 = document.getElementById("back-to-parte1");
const backButton2 = document.getElementById("back-to-parte2");
const backButton3 = document.getElementById("back-to-parte3");
const backButton4 = document.getElementById("back-to-parteInicialCA");

const pdfViewer = document.getElementById("pdf-viewer");
const formatoCards = document.querySelectorAll(".formato-card");

// ===== 1. LISTA DE DATOS PARA LOS CAMPOS =====
// SED y CODIGO son nodos iniciales, usan la misma lista.
const listaNodosIniciales = [
    "00021S",
    "00023S",
    "00028S",
    "00029S",
    "00030S",
    "00031S",
    "00036S",
    "00041S",
    "00043S",
    "00044S",
    "00049S",
    "00051S",
    "00052S",
    "00054S",
    "00055S",
    "00056S",
    "00058S",
    "00059S",
    "00061S",
    "00062S",
    "00063S",
    "00064S",
    "00065S",
    "00066S",
    "00067S",
    "00068S",
    "00070S",
    "00071S",
    "00072S",
    "00073S",
    "00074S",
    "00075S",
    "00077S",
    "00078S",
    "00079S",
    "00081S",
    "00089S",
    "00113S",
    "00115S",
    "00117S",
    "00120S",
    "00127S",
    "00131S",
    "00132S",
    "00133S",
    "00136S",
    "00137S",
    "00140S",
    "00141S",
    "00142S",
    "00145S",
    "00146S",
    "00147S",
    "00148S",
    "00151S",
    "00153S",
    "00154S",
    "00155S",
    "00157S",
    "00161S",
    "00162S",
    "00167S",
    "00168S",
    "00169S",
    "00170S",
    "00172S",
    "00175S",
    "00181S",
    "00183S",
    "00184S",
    "00186S",
    "00187S",
    "00188S",
    "00189S",
    "00193S",
    "00194S",
    "00200S",
    "00201S",
    "00202S",
    "00204S",
    "00206S",
    "00208S",
    "00209S",
    "00210S",
    "00213S",
    "00218S",
    "00220S",
    "00221S",
    "00222S",
    "00224S",
    "00226S",
    "00229S",
    "00232S",
    "00236S",
    "00246S",
    "00247S",
    "00251S",
    "00256S",
    "00265S",
    "00266S",
    "00268S",
    "00269S",
    "00270S",
    "00271S",
    "00273S",
    "00277S",
    "00278S",
    "00283S",
    "00284S",
    "00288S",
    "00289S",
    "00291S",
    "00296S",
    "00297S",
    "00300S",
    "00301S",
    "00302S",
    "00303S",
    "00304S",
    "00305S",
    "00306S",
    "00307S",
    "00308S",
    "00310S",
    "00312S",
    "00313S",
    "00314S",
    "00317S",
    "00320S",
    "00322S",
    "00323S",
    "00324S",
    "00329S",
    "00330S",
    "00331S",
    "00333S",
    "00334S",
    "00335S",
    "00336S",
    "00337S",
    "00342S",
    "00348S",
    "00349S",
    "00351S",
    "00352S",
    "00356S",
    "00360S",
    "00361S",
    "00362S",
    "00367S",
    "00376S",
    "00379S",
    "00380S",
    "00381S",
    "00382S",
    "00383S",
    "00387S",
    "00389S",
    "00392S",
    "00397S",
    "00404S",
    "00405S",
    "00406S",
    "00407S",
    "00409S",
    "00411S",
    "00412S",
    "00414S",
    "00415S",
    "00418S",
    "00421S",
    "00425S",
    "00426S",
    "00429S",
    "00433S",
    "00434S",
    "00436S",
    "00438S",
    "00439S",
    "00442S",
    "00448S",
    "00451S",
    "00452S",
    "00453S",
    "00454S",
    "00456S",
    "00457S",
    "00458S",
    "00459S",
    "00460S",
    "00462S",
    "00465S",
    "00466S",
    "00469S",
    "00470S",
    "00471S",
    "00472S",
    "00473S",
    "00474S",
    "00475S",
    "00476S",
    "00477S",
    "00479S",
    "00480S",
    "00481S",
    "00482S",
    "00487S",
    "00488S",
    "00489S",
    "00490S",
    "00491S",
    "00499S",
    "00503S",
    "00506S",
    "00508S",
    "00510S",
    "00511S",
    "00516S",
    "00518S",
    "00523S",
    "00525S",
    "00530S",
    "00531S",
    "00535S",
    "00536S",
    "00537S",
    "00538S",
    "00540S",
    "00542S",
    "00547S",
    "00549S",
    "00550S",
    "00551S",
    "00552S",
    "00554S",
    "00555S",
    "00556S",
    "00557S",
    "00558S",
    "00559S",
    "00560S",
    "00561S",
    "00562S",
    "00563S",
    "00564S",
    "00575S",
    "00578S",
    "00581S",
    "00582S",
    "00583S",
    "00586S",
    "00588S",
    "00589S",
    "00591S",
    "00596S",
    "00597S",
    "00599S",
    "00600S",
    "00601S",
    "00602S",
    "00603S",
    "00617S",
    "00618S",
    "00619S",
    "00620S",
    "00621S",
    "00622S",
    "00623S",
    "00624S",
    "00630S",
    "00632S",
    "00633S",
    "00642S",
    "00643S",
    "00644S",
    "00645S",
    "00646S",
    "00647S",
    "00648S",
    "00649S",
    "00650S",
    "00653S",
    "00661S",
    "00663S",
    "00664S",
    "00665S",
    "00667S",
    "00670S",
    "00671S",
    "00672S",
    "00673S",
    "00676S",
    "00687S",
    "00688S",
    "00689S",
    "00690S",
    "00696S",
    "00697S",
    "00698S",
    "00702S",
    "00705S",
    "00706S",
    "00707S",
    "00708S",
    "00714S",
    "00727S",
    "00728S",
    "00729S",
    "00733S",
    "00734S",
    "00736S",
    "00740S",
    "00741S",
    "00743S",
    "00744S",
    "00751S",
    "00752S",
    "00753S",
    "00759S",
    "00760S",
    "00762S",
    "00763S",
    "00766S",
    "00767S",
    "00768S",
    "00769S",
    "00771S",
    "00773S",
    "00774S",
    "00785S",
    "00786S",
    "00787S",
    "00788S",
    "00789S",
    "00790S",
    "00791S",
    "00795S",
    "00796S",
    "00797S",
    "00800S",
    "00801S",
    "00804S",
    "00807S",
    "00808S",
    "00809S",
    "00811S",
    "00812S",
    "00814S",
    "00816S",
    "00820S",
    "00823S",
    "00824S",
    "00826S",
    "00827S",
    "00828S",
    "00830S",
    "00834S",
    "00837S",
    "00839S",
    "00840S",
    "00842S",
    "00843S",
    "00844S",
    "00845S",
    "00846S",
    "00847S",
    "00848S",
    "00849S",
    "00850S",
    "00852S",
    "00854S",
    "00860S",
    "00862S",
    "00863S",
    "00866S",
    "00869S",
    "00878S",
    "00879S",
    "00883S",
    "00884S",
    "00886S",
    "00888S",
    "00889S",
    "00894S",
    "00895S",
    "00896S",
    "00900S",
    "00903S",
    "00904S",
    "00906S",
    "00909S",
    "00910S",
    "00911S",
    "00912S",
    "00913S",
    "00914S",
    "00915S",
    "00916S",
    "00917S",
    "00922S",
    "00928S",
    "00933S",
    "00934S",
    "00935S",
    "00936S",
    "00940S",
    "00941S",
    "00945S",
    "00946S",
    "00964S",
    "00965S",
    "00967S",
    "00968S",
    "00971S",
    "00972S",
    "00973S",
    "00974S",
    "00978S",
    "00979S",
    "00981S",
    "00982S",
    "00984S",
    "00985S",
    "00987S",
    "00988S",
    "00994S",
    "00995S",
    "00999S",
    "01001S",
    "01004S",
    "01006S",
    "01007S",
    "01008S",
    "01012S",
    "01016S",
    "01017S",
    "01021S",
    "01022S",
    "01024S",
    "01026S",
    "01027S",
    "01028S",
    "01031S",
    "01032S",
    "01033S",
    "01034S",
    "01037S",
    "01038S",
    "01039S",
    "01040S",
    "01041S",
    "01043S",
    "01045S",
    "01047S",
    "01049S",
    "01050S",
    "01051S",
    "01052S",
    "01053S",
    "01057S",
    "01059S",
    "01064S",
    "01066S",
    "01067S",
    "01071S",
    "01077S",
    "01085S",
    "01086S",
    "01087S",
    "01091S",
    "01093S",
    "01095S",
    "01097S",
    "01098S",
    "01099S",
    "01101S",
    "01102S",
    "01103S",
    "01104S",
    "01107S",
    "01109S",
    "01112S",
    "01116S",
    "01120S",
    "01121S",
    "01123S",
    "01128S",
    "01129S",
    "01137S",
    "01141S",
    "01142S",
    "01144S",
    "01145S",
    "01151S",
    "01155S",
    "01156S",
    "01160S",
    "01162S",
    "01163S",
    "01164S",
    "01166S",
    "01168S",
    "01169S",
    "01170S",
    "01171S",
    "01172S",
    "01174S",
    "01182S",
    "01185S",
    "01186S",
    "01188S",
    "01189S",
    "01194S",
    "01195S",
    "01197S",
    "01202S",
    "01203S",
    "01205S",
    "01209S",
    "01210S",
    "01211S",
    "01212S",
    "01213S",
    "01214S",
    "01215S",
    "01216S",
    "01222S",
    "01228S",
    "01230S",
    "01239S",
    "01243S",
    "01246S",
    "01248S",
    "01249S",
    "01258S",
    "01259S",
    "01260S",
    "01261S",
    "01262S",
    "01263S",
    "01264S",
    "01265S",
    "01266S",
    "01267S",
    "01268S",
    "01271S",
    "01273S",
    "01274S",
    "01275S",
    "01276S",
    "01277S",
    "01279S",
    "01281S",
    "01282S",
    "01283S",
    "01286S",
    "01288S",
    "01289S",
    "01291S",
    "01292S",
    "01293S",
    "01294S",
    "01295S",
    "01297S",
    "01298S",
    "01299S",
    "01300S",
    "01301S",
    "01302S",
    "01303S",
    "01304S",
    "01305S",
    "01306S",
    "01307S",
    "01308S",
    "01309S",
    "01310S",
    "01311S",
    "01312S",
    "01313S",
    "01314S",
    "01315S",
    "01316S",
    "01317S",
    "01318S",
    "01321S",
    "01325S",
    "01327S",
    "01332S",
    "01333S",
    "01339S",
    "01346S",
    "01347S",
    "01348S",
    "01349S",
    "01350S",
    "01353S",
    "01354S",
    "01356S",
    "01357S",
    "01360S",
    "01361S",
    "01364S",
    "01365S",
    "01366S",
    "01368S",
    "01369S",
    "01370S",
    "01371S",
    "01372S",
    "01373S",
    "01374S",
    "01375S",
    "01376S",
    "01377S",
    "01379S",
    "01380S",
    "01381S",
    "01383S",
    "01384S",
    "01385S",
    "01386S",
    "01387S",
    "01388S",
    "01389S",
    "01390S",
    "01391S",
    "01394S",
    "01395S",
    "01396S",
    "01397S",
    "01399S",
    "01400S",
    "01401S",
    "01402S",
    "01403S",
    "01404S",
    "01405S",
    "01406S",
    "01408S",
    "01409S",
    "01410S",
    "01411S",
    "01412S",
    "01413S",
    "01414S",
    "01416S",
    "01417S",
    "01418S",
    "01419S",
    "01420S",
    "01422S",
    "01423S",
    "01425S",
    "01426S",
    "01427S",
    "01428S",
    "01429S",
    "01430S",
    "01431S",
    "01433S",
    "01435S",
    "01436S",
    "01437S",
    "01438S",
    "01439S",
    "01440S",
    "01441S",
    "01442S",
    "01444S",
    "01445S",
    "01446S",
    "01447S",
    "01448S",
    "01449S",
    "01451S",
    "01452S",
    "01453S",
    "01454S",
    "01455S",
    "01457S",
    "01458S",
    "01460S",
    "01462S",
    "01463S",
    "01464S",
    "01465S",
    "01466S",
    "01468S",
    "01469S",
    "01470S",
    "01472S",
    "01473S",
    "01474S",
    "01476S",
    "01478S",
    "01480S",
    "01481S",
    "01483S",
    "01485S",
    "01487S",
    "01490S",
    "01491S",
    "01493S",
    "01494S",
    "01496S",
    "01497S",
    "01498S",
    "01501S",
    "01503S",
    "01504S",
    "01506S",
    "01508S",
    "01515S",
    "01517S",
    "01520S",
    "01521S",
    "01522S",
    "01523S",
    "01524S",
    "01525S",
    "01527S",
    "01528S",
    "01530S",
    "01531S",
    "01532S",
    "01533S",
    "01535S",
    "01537S",
    "01539S",
    "01540S",
    "01541S",
    "01543S",
    "01546S",
    "01547S",
    "01548S",
    "01549S",
    "01550S",
    "01551S",
    "01554S",
    "01555S",
    "01556S",
    "01559S",
    "01560S",
    "01562S",
    "01564S",
    "01566S",
    "01567S",
    "01570S",
    "01572S",
    "01574S",
    "01575S",
    "01576S",
    "01577S",
    "01578S",
    "01579S",
    "01580S",
    "01581S",
    "01582S",
    "01585S",
    "01586S",
    "01587S",
    "01588S",
    "01592S",
    "01593S",
    "01595S",
    "01598S",
    "01599S",
    "01600S",
    "01601S",
    "01602S",
    "01603S",
    "01604S",
    "01606S",
    "01607S",
    "01609S",
    "01610S",
    "01611S",
    "01613S",
    "01614S",
    "01616S",
    "01618S",
    "01619S",
    "01620S",
    "01624S",
    "01626S",
    "01628S",
    "01629S",
    "01630S",
    "01631S",
    "01632S",
    "01634S",
    "01635S",
    "01636S",
    "01637S",
    "01638S",
    "01641S",
    "01643S",
    "01645S",
    "01646S",
    "01649S",
    "01651S",
    "01653S",
    "01654S",
    "01655S",
    "01656S",
    "01657S",
    "01660S",
    "01663S",
    "01665S",
    "01666S",
    "01668S",
    "01669S",
    "01672S",
    "01673S",
    "01676S",
    "01677S",
    "01678S",
    "01679S",
    "01683S",
    "01684S",
    "01686S",
    "01693S",
    "01695S",
    "01696S",
    "01697S",
    "01700S",
    "01703S",
    "01705S",
    "01706S",
    "01709S",
    "01710S",
    "01711S",
    "01713S",
    "01718S",
    "01719S",
    "01720S",
    "01722S",
    "01723S",
    "01724S",
    "01725S",
    "01726S",
    "01727S",
    "01736S",
    "01738S",
    "01739S",
    "01742S",
    "01743S",
    "01744S",
    "01745S",
    "01746S",
    "01747S",
    "01748S",
    "01749S",
    "01750S",
    "01752S",
    "01753S",
    "01754S",
    "01755S",
    "01756S",
    "01757S",
    "01760S",
    "01761S",
    "01765S",
    "01766S",
    "01767S",
    "01768S",
    "01769S",
    "01770S",
    "01771S",
    "01774S",
    "01775S",
    "01778S",
    "01781S",
    "01784S",
    "01787S",
    "01788S",
    "01789S",
    "01790S",
    "01791S",
    "01792S",
    "01793S",
    "01794S",
    "01795S",
    "01796S",
    "01797S",
    "01798S",
    "01799S",
    "01800S",
    "01801S",
    "01802S",
    "01803S",
    "01804S",
    "01805S",
    "01806S",
    "01807S",
    "01808S",
    "01809S",
    "01810S",
    "01811S",
    "01812S",
    "01815S",
    "01816S",
    "01817S",
    "01818S",
    "01819S",
    "01820S",
    "01821S",
    "01822S",
    "01823S",
    "01824S",
    "01825S",
    "01827S",
    "01828S",
    "01829S",
    "01830S",
    "01831S",
    "01832S",
    "01834S",
    "01835S",
    "01837S",
    "01838S",
    "01839S",
    "01840S",
    "01841S",
    "01842S",
    "01843S",
    "01844S",
    "01845S",
    "01846S",
    "01847S",
    "01848S",
    "01850S",
    "01852S",
    "01853S",
    "01854S",
    "01855S",
    "01856S",
    "01857S",
    "01858S",
    "01859S",
    "01860S",
    "01861S",
    "01863S",
    "01864S",
    "01867S",
    "01869S",
    "01872S",
    "01873S",
    "01874S",
    "01876S",
    "01877S",
    "01878S",
    "01879S",
    "01880S",
    "01882S",
    "01885S",
    "01886S",
    "01889S",
    "01890S",
    "01893S",
    "01894S",
    "01895S",
    "01897S",
    "01898S",
    "01899S",
    "01902S",
    "01905S",
    "01907S",
    "01908S",
    "01909S",
    "01910S",
    "01911S",
    "01913S",
    "01915S",
    "01917S",
    "01920S",
    "01924S",
    "01925S",
    "01927S",
    "01928S",
    "01930S",
    "01931S",
    "01933S",
    "01934S",
    "01935S",
    "01938S",
    "01939S",
    "01943S",
    "01944S",
    "01945S",
    "01946S",
    "01947S",
    "01948S",
    "01949S",
    "01950S",
    "01951S",
    "01952S",
    "01954S",
    "01956S",
    "01959S",
    "01960S",
    "01962S",
    "01964S",
    "01965S",
    "01966S",
    "01967S",
    "01968S",
    "01969S",
    "01970S",
    "01972S",
    "01973S",
    "01974S",
    "01975S",
    "01976S",
    "01977S",
    "01978S",
    "01981S",
    "01982S",
    "01983S",
    "01984S",
    "01988S",
    "01989S",
    "01992S",
    "01994S",
    "01995S",
    "01997S",
    "01998S",
    "01999S",
    "02000S",
    "04000S",
    "04010S",
    "04030S",
    "04050S",
    "05050S",
    "06000S",
    "80001S",
];

// NODOFINAL y NodofinalCA son nodos finales, usan la misma lista.
const listaNodosFinales = [
    "01103S",
    "00123T",
    "00127S",
    "13647T",
    "01032S",
    "00031S",
    "65337X",
    "01435S",
    "00457S",
    "G01",
    "18013T",
    "17405T",
    "06108C",
    "00036S",
    "00329S",
    "00433S",
    "60104X",
    "12363L",
    "00028S",
    "00586S",
    "05835C",
    "08681C",
    "60100X",
    "00162S",
    "00030S",
    "13518T",
    "00552M",
    "10674T",
    "65252X",
    "00157S",
    "01778S",
    "G05",
    "00979S",
    "05437C",
    "01925S",
    "00049S",
    "00352S",
    "00044S",
    "06768C",
    "00133S",
    "01781S",
    "00132S",
    "17614T",
    "00146S",
    "00453S",
    "00120S",
    "00117S",
    "01976S",
    "00168S",
    "05826C",
    "00317S",
    "05142C",
    "SI06",
    "08429C",
    "00288S",
    "01312S",
    "06042C",
    "65074X",
    "00153S",
    "00154S",
    "16307T",
    "05890C",
    "00188S",
    "00200S",
    "SI03",
    "08779C",
    "CE05",
    "00964S",
    "01170S",
    "65032X",
    "65033X",
    "00412S",
    "01295T",
    "00063S",
    "00142S",
    "00151S",
    "U06",
    "05379C",
    "65590X",
    "65124X",
    "01021S",
    "00062S",
    "00342S",
    "65281X",
    "00074S",
    "00073S",
    "15284T",
    "00895S",
    "05666C",
    "00251S",
    "01748S",
    "00912S",
    "01789S",
    "01812S",
    "B05",
    "00360S",
    "01982S",
    "10303T",
    "06890C",
    "08686C",
    "00187S",
    "02084T",
    "08612C",
    "B07",
    "65099X",
    "00081S",
    "07098C",
    "16821T",
    "02141T",
    "00208S",
    "62031X",
    "00136S",
    "06172C",
    "01947S",
    "05950C",
    "00766S",
    "00064S",
    "65282X",
    "00405S",
    "05842C",
    "08643C",
    "01064S",
    "05488C",
    "05839C",
    "64184X",
    "08045C",
    "64258X",
    "00967S",
    "01120S",
    "08680C",
    "U03",
    "64209X",
    "U20",
    "15426T",
    "00172S",
    "01426S",
    "65242X",
    "03349A",
    "00070S",
    "05924C",
    "65095X",
    "01696S",
    "65657X",
    "12991T",
    "00884S",
    "65237X",
    "00141S",
    "65047X",
    "00320S",
    "00888S",
    "09151C",
    "60028X",
    "60029X",
    "SI01",
    "11079A",
    "00054S",
    "00169S",
    "05858C",
    "65606X",
    "01531S",
    "00052S",
    "06886C",
    "00021S",
    "65137X",
    "06916C",
    "07641C",
    "10396T",
    "G11",
    "00823S",
    "00051S",
    "00850S",
    "00181S",
    "00072S",
    "12707T",
    "65440X",
    "00814S",
    "06198C",
    "15955T",
    "60107X",
    "65396X",
    "G14",
    "06305C",
    "01749S",
    "SI17",
    "13176T",
    "00113S",
    "00201S",
    "U01",
    "12064T",
    "65484X",
    "07692C",
    "00247S",
    "01028S",
    "08187C",
    "65450X",
    "05395C",
    "01451S",
    "15968T",
    "B23",
    "05307C",
    "12354L",
    "00194S",
    "08216C",
    "65196X",
    "13638T",
    "15576T",
    "00202S",
    "62022X",
    "00077S",
    "05883C",
    "14573T",
    "00058S",
    "00392S",
    "12213T",
    "64164X",
    "00301S",
    "00296S",
    "14449T",
    "60105X",
    "65431X",
    "65108X",
    "00043S",
    "65377X",
    "00291S",
    "65259X",
    "01540S",
    "00161S",
    "64176X",
    "05211C",
    "01205S",
    "01873S",
    "05239C",
    "64231X",
    "35091A",
    "00170S",
    "60125X",
    "13622T",
    "00454S",
    "G21",
    "60122X",
    "65799X",
    "00079S",
    "60050X",
    "65279X",
    "00259T",
    "35190A",
    "15986T",
    "00418S",
    "65038X",
    "06807C",
    "B14",
    "65290X",
    "00193S",
    "06424C",
    "06659C",
    "U24",
    "11295T",
    "00397S",
    "01107S",
    "00361S",
    "01600T",
    "65501X",
    "00314S",
    "04901T",
    "16091T",
    "B02",
    "00068S",
    "00266S",
    "00059S",
    "13548T",
    "65150X",
    "01678T",
    "07516C",
    "B01",
    "05941C",
    "00183S",
    "05266C",
    "65483X",
    "12918T",
    "00147S",
    "01468S",
    "12355L",
    "00661S",
    "13153T",
    "65326X",
    "01374S",
    "01429S",
    "00011T",
    "00834S",
    "64172X",
    "05295C",
    "64233X",
    "00540S",
    "00057T",
    "00148S",
    "62024X",
    "00206S",
    "06694C",
    "00904S",
    "00204S",
    "00337S",
    "08890C",
    "10118T",
    "00923M",
    "00071S",
    "00466S",
    "06455C",
    "65011X",
    "00462S",
    "CE01",
    "01724S",
    "64167X",
    "01121S",
    "07886C",
    "64210X",
    "13062T",
    "00620S",
    "CE02",
    "00367S",
    "07140C",
    "01490S",
    "01724T",
    "U22",
    "00516S",
    "06137C",
    "00221S",
    "17989T",
    "00503S",
    "65089X",
    "00220S",
    "00911S",
    "07663C",
    "65284X",
    "65442X",
    "00523S",
    "62003X",
    "62004X",
    "62007X",
    "62008X",
    "B06",
    "17017T",
    "00302S",
    "01644T",
    "LU01",
    "00978S",
    "01119T",
    "01964S",
    "14939T",
    "14184T",
    "00284S",
    "00479S",
    "65090X",
    "01303T",
    "13714T",
    "12957T",
    "05400C",
    "00434S",
    "CE03",
    "U21",
    "04913A",
    "00184S",
    "05342C",
    "U14",
    "00065S",
    "00226S",
    "08405C",
    "00006T",
    "00005T",
    "01800S",
    "65075X",
    "00362S",
    "01406S",
    "C17",
    "00903S",
    "10301T",
    "00335S",
    "65228X",
    "00300S",
    "01454S",
    "35040A",
    "01406T",
    "00596S",
    "G08",
    "00270S",
    "17040T",
    "15173T",
    "00382S",
    "00269S",
    "00303S",
    "LU06",
    "05777C",
    "00310S",
    "CE09",
    "00333S",
    "60091X",
    "00623S",
    "01401S",
    "01527S",
    "10847T",
    "C13",
    "00442S",
    "01585S",
    "00518S",
    "01337T",
    "65040X",
    "13096T",
    "60108X",
    "LS10",
    "01275S",
    "00844S",
    "01874S",
    "10165A",
    "64127X",
    "64187X",
    "65362X",
    "01930S",
    "08095C",
    "00232S",
    "01721T",
    "U17",
    "01102T",
    "00056S",
    "64169X",
    "08505C",
    "G18",
    "65097X",
    "SI05",
    "01898S",
    "08460C",
    "64204X",
    "65009X",
    "65236X",
    "SI18",
    "12382T",
    "00323S",
    "00331S",
    "65007X",
    "13209T",
    "00268S",
    "00278S",
    "04823A",
    "01109S",
    "60118X",
    "00224S",
    "00308S",
    "11215T",
    "15392T",
    "00304S",
    "01350S",
    "00305S",
    "01149T",
    "64292X",
    "00894S",
    "00306S",
    "11871A",
    "00490S",
    "60013X",
    "LU03",
    "00727S",
    "14585T",
    "16649T",
    "00624S",
    "16671T",
    "SL04",
    "03731A",
    "04788A",
    "11586A",
    "35128A",
    "00307S",
    "07414M",
    "65540X",
    "00336S",
    "00271S",
    "08371C",
    "12701T",
    "05599C",
    "62005X",
    "65311X",
    "00621S",
    "64193X",
    "U18",
    "12158T",
    "65324X",
    "00055S",
    "64272X",
    "01386S",
    "02670A",
    "00115S",
    "05516C",
    "00330S",
    "00297S",
    "00407S",
    "SI12",
    "00406S",
    "00459S",
    "06008C",
    "SI13",
    "00389S",
    "05558C",
    "04900A",
    "C18",
    "01408S",
    "00465S",
    "00824S",
    "05867C",
    "01077S",
    "01142S",
    "06813C",
    "01493S",
    "12655T",
    "01311S",
    "00906S",
    "08611C",
    "00589S",
    "11191T",
    "65055X",
    "G20",
    "01067S",
    "15515T",
    "01571T",
    "00236S",
    "00067S",
    "13031T",
    "60051X",
    "00186S",
    "U13",
    "60018X",
    "00265S",
    "08626C",
    "64165X",
    "00213S",
    "00376S",
    "00476S",
    "06242C",
    "60061X",
    "65120X",
    "60063X",
    "35013A",
    "65562X",
    "00774S",
    "01618S",
    "65059X",
    "65354X",
    "A13",
    "08508C",
    "01910S",
    "65225X",
    "07257C",
    "65210X",
    "C20",
    "01832S",
    "10567T",
    "65039X",
    "65563X",
    "13877T",
    "00702S",
    "01984S",
    "65180X",
    "01305S",
    "64196X",
    "01369S",
    "01909S",
    "10599T",
    "C15",
    "17729T",
    "09139C",
    "Z18",
    "65217X",
    "00334S",
    "00425S",
    "U16",
    "00324S",
    "06736C",
    "05711C",
    "02142T",
    "64249X",
    "00456S",
    "01946S",
    "06528C",
    "08656C",
    "64286X",
    "05971C",
    "01806S",
    "09039C",
    "06888C",
    "13316T",
    "64049X",
    "00785S",
    "10617T",
    "A12",
    "00933S",
    "64044X",
    "64045X",
    "13293T",
    "00061S",
    "U05",
    "65216X",
    "62001X",
    "08339C",
    "20396A",
    "62000X",
    "B03",
    "00058T",
    "35016A",
    "00175S",
    "65689X",
    "01336T",
    "00575S",
    "00696S",
    "00697S",
    "Z08",
    "05330C",
    "06367C",
    "00917S",
    "00506S",
    "00530S",
    "01346S",
    "00916S",
    "03360A",
    "01436S",
    "65273X",
    "13372T",
    "G13",
    "14322T",
    "00246S",
    "65043X",
    "13171T",
    "05861C",
    "G10",
    "00470S",
    "00797S",
    "01098S",
    "00551S",
    "14551T",
    "60059X",
    "00277S",
    "U04",
    "65325X",
    "00104T",
    "00511S",
    "11475T",
    "B11",
    "01377S",
    "U07",
    "00826S",
    "60157X",
    "06265C",
    "60113X",
    "06797C",
    "13448T",
    "G16",
    "65250X",
    "00322S",
    "00429S",
    "65322X",
    "64109X",
    "00404S",
    "00510S",
    "00558S",
    "01045S",
    "64110X",
    "65412X",
    "00029S",
    "65512X",
    "01677T",
    "06173C",
    "10952T",
    "00862S",
    "11243T",
    "C02",
    "00547S",
    "16215T",
    "01185S",
    "10126T",
    "64134X",
    "05891C",
    "00209S",
    "01719S",
    "65031X",
    "00415S",
    "05314C",
    "00482S",
    "02346A",
    "B13",
    "65127X",
    "10784T",
    "20620A",
    "PG04",
    "00602S",
    "00438S",
    "Z02",
    "05247C",
    "17727T",
    "00281M",
    "00473S",
    "60082X",
    "65381X",
    "00561S",
    "01795S",
    "65372X",
    "65425X",
    "00995S",
    "00471S",
    "07113C",
    "65081X",
    "00946S",
    "01128S",
    "10644T",
    "64016X",
    "64017X",
    "65555X",
    "65002X",
    "01286S",
    "64066X",
    "A17",
    "60158X",
    "00555S",
    "06804C",
    "CE04",
    "00556S",
    "60014X",
    "60057X",
    "60058X",
    "00481S",
    "00491S",
    "05850C",
    "01606S",
    "00480S",
    "35247A",
    "11216T",
    "01651T",
    "01817S",
    "20737A",
    "20736A",
    "21048A",
    "62069X",
    "06635C",
    "VM29",
    "65154X",
    "00740S",
    "15319T",
    "62070X",
    "PG05",
    "00351S",
    "SL03",
    "00922S",
    "60135X",
    "01171S",
    "01895S",
    "MO12",
    "00557S",
    "00538S",
    "01649S",
    "01195S",
    "06820C",
    "64291X",
    "02402A",
    "01333S",
    "11410T",
    "00426S",
    "00276T",
    "00278T",
    "65139X",
    "00588S",
    "13263T",
    "64108X",
    "65627X",
    "13178T",
    "00448S",
    "00965S",
    "11212T",
    "11257T",
    "65152X",
    "00452S",
    "00591S",
    "00222S",
    "00312S",
    "17378T",
    "06496C",
    "08592C",
    "03431A",
    "64284X",
    "00531S",
    "17900T",
    "62067X",
    "14667T",
    "01357S",
    "02258A",
    "07854C",
    "00536S",
    "64107X",
    "04991A",
    "00535S",
    "65576X",
    "00808S",
    "10988A",
    "65791X",
    "00886S",
    "00879S",
    "01024S",
    "00499S",
    "00262T",
    "01182S",
    "06309C",
    "04803A",
    "B21",
    "01775S",
    "A10",
    "60022X",
    "C19",
    "01597T",
    "65174X",
    "00550S",
    "00549S",
    "00583S",
    "11484T",
    "00439S",
    "64034X",
    "01279S",
    "64032X",
    "64033X",
    "00035T",
    "16992T",
    "00816S",
    "05780C",
    "35180A",
    "00554S",
    "07128C",
    "65171X",
    "00477S",
    "01222S",
    "64111X",
    "65479X",
    "01071S",
    "05133C",
    "06361C",
    "Z13",
    "C08",
    "01137T",
    "01246S",
    "65085X",
    "08538C",
    "00633S",
    "05690C",
    "01248S",
    "00472S",
    "05710C",
    "05503C",
    "35215A",
    "01137S",
    "MO14",
    "01475T",
    "05223C",
    "05465C",
    "00421S",
    "00988S",
    "35132A",
    "65199X",
    "01507T",
    "65280X",
    "01092T",
    "65027X",
    "01091S",
    "05864C",
    "65231X",
    "05349C",
    "10474T",
    "01404T",
    "C05",
    "00672S",
    "00275T",
    "13108T",
    "00436S",
    "65667X",
    "12903T",
    "01995S",
    "10787T",
    "PL02",
    "05811C",
    "01102S",
    "SL05",
    "01194S",
    "00796S",
    "05527C",
    "01166S",
    "15998T",
    "01186S",
    "00600S",
    "SL01",
    "01053S",
    "13324T",
    "65239X",
    "00617S",
    "01141S",
    "13188T",
    "60008X",
    "C09",
    "00597S",
    "12989T",
    "00846S",
    "SL09",
    "01684T",
    "00645S",
    "00646S",
    "10840T",
    "11470T",
    "01281S",
    "00469S",
    "20893A",
    "12973T",
    "08313C",
    "16580T",
    "00644S",
    "00599S",
    "60011X",
    "00630S",
    "05018T",
    "C10",
    "00619S",
    "05496C",
    "06808C",
    "65417X",
    "C03",
    "65459X",
    "00789S",
    "00618S",
    "00622S",
    "13562T",
    "13559T",
    "15371T",
    "00763S",
    "05122C",
    "65131X",
    "00313S",
    "35201A",
    "15589T",
    "CE08",
    "00273S",
    "00381S",
    "65467X",
    "65679X",
    "64144X",
    "04417A",
    "00687S",
    "05337C",
    "15533T",
    "08542C",
    "00560S",
    "01301S",
    "65366X",
    "01533T",
    "00643S",
    "10171T",
    "00650S",
    "00642S",
    "65814X",
    "00647S",
    "SJ07",
    "00603S",
    "12821T",
    "00601S",
    "01808S",
    "12365T",
    "03201T",
    "17007T",
    "21352A",
    "00648S",
    "21519A",
    "00649S",
    "10772T",
    "07759C",
    "01586S",
    "VM27",
    "15910T",
    "20934A",
    "03369A",
    "65773X",
    "VM24",
    "65601X",
    "00985S",
    "01312T",
    "16697T",
    "VM26",
    "21523A",
    "65246X",
    "10072T",
    "35243A",
    "G15",
    "01059S",
    "00664S",
    "10668T",
    "00665S",
    "00663S",
    "10769A",
    "10032A",
    "05882C",
    "01050S",
    "08160C",
    "10556A",
    "00913S",
    "11033T",
    "01592S",
    "01656S",
    "16186T",
    "01843T",
    "07491C",
    "64190X",
    "35014A",
    "Z16",
    "01314S",
    "Z19",
    "14253T",
    "10455T",
    "08413C",
    "65724X",
    "00790S",
    "00689S",
    "00690S",
    "08722C",
    "01745S",
    "00688S",
    "05834C",
    "00751S",
    "14348T",
    "01720T",
    "01299S",
    "08544C",
    "07014C",
    "65275X",
    "00271T",
    "00581S",
    "01047S",
    "Z11",
    "15649T",
    "01017S",
    "C01",
    "00708S",
    "35150A",
    "08303C",
    "01261S",
    "01686S",
    "CH03",
    "00707S",
    "01820T",
    "CH11",
    "65804X",
    "62036X",
    "00086T",
    "00658M",
    "00706S",
    "10288T",
    "65293X",
    "10213T",
    "00896S",
    "C21",
    "10131A",
    "64147X",
    "17544T",
    "07884C",
    "10209T",
    "05341C",
    "00773S",
    "12104T",
    "00729S",
    "05865C",
    "35218A",
    "SL08",
    "64268X",
    "05311C",
    "00728S",
    "10132T",
    "65003X",
    "16053T",
    "PG03",
    "01016S",
    "64248X",
    "00762S",
    "08574C",
    "14316T",
    "60088X",
    "Z20",
    "10108T",
    "01136T",
    "01071T",
    "17013T",
    "11083T",
    "00489S",
    "11360T",
    "00741S",
    "05675C",
    "17643T",
    "21434A",
    "05661C",
    "12902T",
    "16711T",
    "VM31",
    "00837S",
    "64020X",
    "64019X",
    "A23",
    "65596X",
    "01528S",
    "00752S",
    "06718C",
    "21214A",
    "01834S",
    "15555T",
    "62038X",
    "12209T",
    "08260C",
    "01364S",
    "03006A",
    "64149X",
    "65046X",
    "10563T",
    "LS11",
    "00982S",
    "65379X",
    "08579C",
    "08575C",
    "00734S",
    "01926T",
    "05873C",
    "01004S",
    "65189X",
    "12868T",
    "64247X",
    "01638S",
    "07572C",
    "IG13",
    "01882T",
    "64216X",
    "21164A",
    "00074T",
    "00771S",
    "21251A",
    "03404A",
    "06217C",
    "00072T",
    "00769S",
    "CH01",
    "10874T",
    "65133X",
    "00936S",
    "65784X",
    "10443A",
    "16417T",
    "00379S",
    "00475S",
    "64069X",
    "01635T",
    "10837T",
    "14443T",
    "64068X",
    "LS08",
    "65012X",
    "00804S",
    "64006X",
    "A02",
    "00409S",
    "13627T",
    "00183T",
    "01294S",
    "02099T",
    "16734T",
    "16478T",
    "00788S",
    "64223X",
    "06120C",
    "01085S",
    "00787S",
    "05398C",
    "05919C",
    "60012X",
    "00791S",
    "60079X",
    "01126T",
    "05874C",
    "01123S",
    "65420X",
    "65128X",
    "08089C",
    "65103X",
    "65422X",
    "01706S",
    "64250X",
    "01626S",
    "10099T",
    "16095T",
    "64227X",
    "65476X",
    "01526T",
    "65338X",
    "01803S",
    "01915S",
    "06168C",
    "65028X",
    "65160X",
    "65378X",
    "64011X",
    "64009X",
    "64222X",
    "01605T",
    "07508C",
    "00981S",
    "01052S",
    "00809S",
    "10402A",
    "PL06",
    "64113X",
    "08374C",
    "00385T",
    "PL01",
    "05989C",
    "10383T",
    "01929T",
    "12418T",
    "00155S",
    "00137S",
    "65481X",
    "11119T",
    "00552S",
    "00974S",
    "01306T",
    "65083X",
    "06425C",
    "01881T",
    "62045X",
    "00131S",
    "01756S",
    "01861S",
    "65066X",
    "05253C",
    "SI20",
    "01155S",
    "01156S",
    "65631X",
    "00178T",
    "01805S",
    "62051X",
    "65780X",
    "13232T",
    "65087X",
    "12325T",
    "64197X",
    "64232X",
    "PG02",
    "06382C",
    "08046C",
    "60046X",
    "64182X",
    "60039X",
    "64163X",
    "65213X",
    "64269X",
    "00001T",
    "00743S",
    "00852S",
    "11207A",
    "A01",
    "11087T",
    "13352T",
    "65602X",
    "07632C",
    "10584T",
    "16406T",
    "65820X",
    "64070X",
    "01582S",
    "01725S",
    "06559C",
    "08099C",
    "64071X",
    "07963C",
    "60003X",
    "17330T",
    "16407T",
    "10199T",
    "65399X",
    "01332S",
    "65211X",
    "00283S",
    "00411S",
    "08325C",
    "LS07",
    "00578S",
    "16618T",
    "00900S",
    "00215T",
    "62062X",
    "00897T",
    "08100C",
    "01097S",
    "B22",
    "12855T",
    "00849S",
    "20761A",
    "17125T",
    "01494S",
    "00848S",
    "10080T",
    "01397S",
    "01485S",
    "06291C",
    "60027X",
    "64208X",
    "14558T",
    "14559T",
    "64000X",
    "65021X",
    "01384S",
    "13942T",
    "01634S",
    "16366T",
    "00458S",
    "64148X",
    "00295T",
    "01380S",
    "HP10",
    "10708T",
    "13376T",
    "01978S",
    "03435A",
    "64078X",
    "10349T",
    "SI07",
    "06921C",
    "06240C",
    "64054X",
    "A06",
    "15769T",
    "64053X",
    "65503X",
    "07627C",
    "00537S",
    "16113T",
    "06306C",
    "65209X",
    "60031X",
    "00915S",
    "65812X",
    "20721A",
    "01797S",
    "62044X",
    "13926T",
    "10414A",
    "65480X",
    "00260T",
    "12210T",
    "01216S",
    "CN06",
    "10371T",
    "00845S",
    "01412S",
    "S04",
    "01771S",
    "10234T",
    "13074T",
    "00349S",
    "05553C",
    "20888A",
    "65419X",
    "01129S",
    "CH12",
    "20392A",
    "65297X",
    "65448X",
    "08383C",
    "01057S",
    "01581T",
    "02695A",
    "64121X",
    "01321S",
    "65204X",
    "00066S",
    "U02",
    "06539C",
    "65439X",
    "08750C",
    "64025X",
    "00670S",
    "64024X",
    "A07",
    "00284T",
    "00934S",
    "B08",
    "07167C",
    "13577T",
    "01001S",
    "62009X",
    "01666S",
    "07268C",
    "65349X",
    "65148X",
    "05513C",
    "16357T",
    "MO11",
    "00971S",
    "SC11",
    "01383S",
    "11081T",
    "65635X",
    "64048X",
    "65045X",
    "65104X",
    "A20",
    "00283T",
    "01154T",
    "04937A",
    "00914S",
    "05888C",
    "00913T",
    "64256X",
    "17915T",
    "SL17",
    "65402X",
    "PA02",
    "16642T",
    "00676T",
    "00670T",
    "01304S",
    "16668T",
    "PA01",
    "15433T",
    "03838A",
    "00743T",
    "00735T",
    "65693X",
    "00730T",
    "00733T",
    "11434T",
    "16547T",
    "PA07",
    "00676S",
    "10515A",
    "00474S",
    "01869S",
    "A21",
    "01710S",
    "62013X",
    "60161X",
    "00883S",
    "01353S",
    "01409S",
    "60040X",
    "65382X",
    "20278A",
    "05428C",
    "13967T",
    "16995T",
    "10491T",
    "01104S",
    "07138C",
    "01908S",
    "65469X",
    "04244A",
    "01679S",
    "01259S",
    "01249S",
    "08925C",
    "35032A",
    "65369X",
    "65344X",
    "65447X",
    "00807S",
    "14493T",
    "00452T",
    "15832T",
    "14568T",
    "12556T",
    "00760S",
    "00876T",
    "64128X",
    "05541C",
    "01197S",
    "VM22",
    "21379A",
    "00653S",
    "05116C",
    "01213S",
    "01214S",
    "VM33",
    "01722S",
    "01144S",
    "60052X",
    "07863C",
    "76044U",
    "05274C",
    "01396S",
    "12516T",
    "01099S",
    "00994S",
    "03356A",
    "01537S",
    "A08",
    "05288C",
    "60160X",
    "64230X",
    "65026X",
    "01164S",
    "10334T",
    "15520T",
    "60005X",
    "C06",
    "60006X",
    "01022S",
    "01093S",
    "06103C",
    "13040T",
    "65071X",
    "10160T",
    "01787S",
    "07016M",
    "13969T",
    "00747T",
    "00732T",
    "PA03",
    "00662T",
    "05837C",
    "Z07",
    "65663X",
    "00698S",
    "35183A",
    "65093X",
    "15545T",
    "65091X",
    "65580X",
    "60002X",
    "01007S",
    "C07",
    "06298C",
    "11265A",
    "60001X",
    "64234X",
    "00673S",
    "01348S",
    "10490A",
    "64013X",
    "04032T",
    "65050X",
    "15868T",
    "11263T",
    "10151T",
    "IG14",
    "U19",
    "01034S",
    "60101X",
    "00023S",
    "60102X",
    "13186T",
    "01031S",
    "01033S",
    "65309X",
    "01425S",
    "10263T",
    "01587T",
    "01361S",
    "64157X",
    "10271T",
    "01375S",
    "00822T",
    "64088X",
    "05539C",
    "10448T",
    "14666T",
    "60069X",
    "64266X",
    "09127C",
    "00122T",
    "01899S",
    "64112X",
    "01306S",
    "65758X",
    "05758C",
    "60080X",
    "65348X",
    "00307T",
    "HP01",
    "10922T",
    "00667S",
    "10257T",
    "14844T",
    "03153A",
    "03152A",
    "PL03",
    "10203T",
    "00915T",
    "12639T",
    "64151X",
    "01470S",
    "01966S",
    "07605C",
    "SL16",
    "00910S",
    "00928S",
    "01855S",
    "00406T",
    "14117T",
    "00078S",
    "00075S",
    "08868C",
    "13665T",
    "60020X",
    "04589A",
    "00356S",
    "00582S",
    "60004X",
    "00559S",
    "06862C",
    "06672C",
    "01648T",
    "00348S",
    "65289X",
    "01086S",
    "00269T",
    "01530S",
    "00811T",
    "00810T",
    "01672S",
    "21435A",
    "01994S",
    "05769C",
    "02823A",
    "12872T",
    "06823C",
    "00273T",
    "01228S",
    "Z21",
    "01970T",
    "01309S",
    "08642C",
    "01752S",
    "06625C",
    "B12",
    "05764C",
    "01163S",
    "05828C",
    "G22",
    "00686T",
    "17216T",
    "00968S",
    "SA18",
    "05328C",
    "01619T",
    "65330X",
    "60119X",
    "06109C",
    "65088X",
    "02046T",
    "10961T",
    "15517T",
    "05108C",
    "VM32",
    "65464X",
    "08731C",
    "60044X",
    "65536X",
    "64214X",
    "00210S",
    "00387S",
    "05986C",
    "65559X",
    "65726X",
    "00282T",
    "65683X",
    "Z22",
    "65077X",
    "00004T",
    "01943S",
    "65176X",
    "01465S",
    "11221T",
    "06134C",
    "00909S",
    "01365S",
    "10412T",
    "05731C",
    "21690A",
    "13271T",
    "00563S",
    "01579S",
    "00671S",
    "35077A",
    "06295C",
    "35075A",
    "65388X",
    "U08",
    "64177X",
    "65156X",
    "00987S",
    "01809S",
    "65155X",
    "CE10",
    "10130T",
    "PL04",
    "04377A",
    "00228M",
    "00422T",
    "05476C",
    "00847S",
    "05477C",
    "00053T",
    "01956S",
    "64073X",
    "01168S",
    "12783T",
    "IG12",
    "12400T",
    "01297S",
    "01448T",
    "15243T",
    "06334C",
    "01006S",
    "02340A",
    "01160S",
    "01169S",
    "01260S",
    "05806C",
    "03974A",
    "06364C",
    "06866C",
    "00714S",
    "60134X",
    "11266T",
    "00343T",
    "01761S",
    "11321T",
    "04168A",
    "04158A",
    "04161A",
    "14054T",
    "16098T",
    "64138X",
    "00916T",
    "00460S",
    "65049X",
    "16070T",
    "LS13",
    "64129X",
    "64130X",
    "00024T",
    "SL11",
    "01300S",
    "10883T",
    "06867C",
    "01298S",
    "01243S",
    "PT02",
    "20283A",
    "06595C",
    "65492X",
    "00565T",
    "00984S",
    "01609T",
    "17200T",
    "01599T",
    "65519X",
    "00646T",
    "16397T",
    "64235X",
    "PA08",
    "16997T",
    "60038X",
    "00167S",
    "SI19",
    "01210S",
    "05351C",
    "16060T",
    "65080X",
    "21283A",
    "21849A",
    "01209S",
    "01211S",
    "05360C",
    "16767T",
    "13241T",
    "01859S",
    "12466T",
    "05361C",
    "12863T",
    "05363C",
    "21692A",
    "16902T",
    "01994T",
    "05623C",
    "VM35",
    "VM02",
    "01367T",
    "17708T",
    "05624C",
    "14236T",
    "14602T",
    "16619T",
    "06896C",
    "16167T",
    "10032T",
    "64086X",
    "14624T",
    "06307C",
    "05292C",
    "16356T",
    "06126C",
    "01308S",
    "64195X",
    "04979A",
    "04929A",
    "01143T",
    "62041X",
    "01547T",
    "08308C",
    "06131C",
    "10322T",
    "01744S",
    "01943T",
    "01027S",
    "65020X",
    "17597T",
    "01886S",
    "17272T",
    "17352T",
    "65827X",
    "A19",
    "01863S",
    "06220C",
    "00705S",
    "62032X",
    "21197A",
    "01965S",
    "65816X",
    "AP45",
    "06883C",
    "14594T",
    "14073T",
    "01960S",
    "02109T",
    "12597T",
    "01266S",
    "00414T",
    "02018T",
    "65807X",
    "CL25",
    "01494T",
    "10527T",
    "06348C",
    "00416T",
    "01264S",
    "PL07",
    "16306T",
    "65803X",
    "01303S",
    "NA02",
    "15249T",
    "05735C",
    "06555C",
    "10512T",
    "15454T",
    "01635S",
    "11408A",
    "17336T",
    "65818X",
    "10265T",
    "A05",
    "01274S",
    "64060X",
    "01273S",
    "01422S",
    "14326T",
    "64058X",
    "64059X",
    "A14",
    "00878S",
    "12997T",
    "11033A",
    "A25",
    "60075X",
    "01574S",
    "15209T",
    "Z12",
    "AP44",
    "65819X",
    "17335T",
    "64040X",
    "01981S",
    "64038X",
    "64039X",
    "A09",
    "21474A",
    "01282S",
    "05644C",
    "VM19",
    "VM13",
    "17651T",
    "VM21",
    "05676C",
    "15397T",
    "20424A",
    "01690T",
    "12232T",
    "15855T",
    "01570S",
    "13250T",
    "64183X",
    "01959S",
    "64063X",
    "01329T",
    "01593S",
    "64061X",
    "A16",
    "64171X",
    "01631S",
    "SR01",
    "00918T",
    "00243T",
    "01934S",
    "60164X",
    "09149C",
    "07163C",
    "65300X",
    "01784S",
    "00786S",
    "65194X",
    "02094T",
    "15849T",
    "00660T",
    "00657T",
    "01162S",
    "15768T",
    "06112C",
    "01302S",
    "08431C",
    "01189S",
    "08889C",
    "65429X",
    "SL07",
    "35225A",
    "01268S",
    "01755S",
    "05525C",
    "01449S",
    "01650T",
    "00940S",
    "03595A",
    "01448S",
    "13796T",
    "16678T",
    "60016X",
    "00383S",
    "64207X",
    "01897S",
    "11162T",
    "06666C",
    "64274X",
    "65797X",
    "01949S",
    "65798X",
    "01977S",
    "06323C",
    "65044X",
    "01292S",
    "01613S",
    "35260A",
    "00121T",
    "60109X",
    "65245X",
    "00869S",
    "01293S",
    "65329X",
    "10180T",
    "SI04",
    "06840C",
    "01114T",
    "65193X",
    "01315S",
    "06537C",
    "01313S",
    "01816S",
    "01818S",
    "64191X",
    "00384T",
    "65358X",
    "17414T",
    "15920T",
    "65785X",
    "65514X",
    "10834T",
    "03617A",
    "12102T",
    "13963T",
    "11104T",
    "05485C",
    "17370T",
    "21621A",
    "65550X",
    "64046X",
    "65008X",
    "A04",
    "64174X",
    "04651A",
    "16529T",
    "01327S",
    "62074X",
    "21163A",
    "21321A",
    "21792A",
    "PT01",
    "06154C",
    "05947C",
    "00134T",
    "01713T",
    "05932C",
    "L01",
    "13344T",
    "65564X",
    "01026S",
    "64074X",
    "65123X",
    "65549X",
    "A03",
    "01547S",
    "01389S",
    "62049X",
    "60129X",
    "15891T",
    "65361X",
    "01988S",
    "64259X",
    "65482X",
    "65341X",
    "01583T",
    "02370A",
    "16207T",
    "62043X",
    "L02",
    "01546T",
    "07220C",
    "17372T",
    "01152T",
    "15846T",
    "01141T",
    "20121A",
    "12118T",
    "17580T",
    "SJ03",
    "15402T",
    "SR08",
    "50141A",
    "01038S",
    "10541T",
    "65800X",
    "01460S",
    "03632A",
    "00759S",
    "64212X",
    "SL15",
    "06656C",
    "00842T",
    "03359A",
    "04269A",
    "35242A",
    "64170X",
    "01427S",
    "CH21",
    "65006X",
    "01472S",
    "01037S",
    "60162X",
    "00164T",
    "01913S",
    "00159T",
    "L04",
    "01376S",
    "01387S",
    "01399S",
    "01410S",
    "01562S",
    "65802X",
    "01709S",
    "01373S",
    "01372S",
    "15680T",
    "SI02",
    "17436T",
    "02032T",
    "01497S",
    "01039S",
    "12896T",
    "01371S",
    "65179X",
    "00451S",
    "10344T",
    "60163X",
    "65404X",
    "10243T",
    "16479T",
    "00863S",
    "00291T",
    "64192X",
    "64168X",
    "01237M",
    "01541S",
    "16970T",
    "65579X",
    "01767S",
    "01496S",
    "10313T",
    "01446S",
    "65274X",
    "SC21",
    "01049S",
    "01944S",
    "50004A",
    "00854S",
    "01560S",
    "65661X",
    "01677S",
    "12709T",
    "12118L",
    "01575S",
    "01556S",
    "64185X",
    "35214A",
    "11135T",
    "13436T",
    "15248T",
    "12035T",
    "01349S",
    "01390S",
    "11007T",
    "01404S",
    "65163X",
    "01391S",
    "64226X",
    "00605A",
    "11102T",
    "01218T",
    "15436T",
    "02987A",
    "15435T",
    "01508S",
    "09154C",
    "05325C",
    "06711C",
    "Z10",
    "64181X",
    "01490T",
    "10576A",
    "SC10",
    "65306X",
    "C04",
    "64201X",
    "00437T",
    "10731T",
    "14333T",
    "00435T",
    "01433S",
    "01630S",
    "12145T",
    "64229X",
    "64188X",
    "01403S",
    "01633T",
    "11169T",
    "11168T",
    "05921C",
    "01532S",
    "64213X",
    "65796X",
    "65223X",
    "08366C",
    "64228X",
    "65291X",
    "65232X",
    "20847A",
    "15850T",
    "01478S",
    "65535X",
    "10929T",
    "11065T",
    "50263A",
    "11067T",
    "14345T",
    "11218T",
    "10327T",
    "13007T",
    "01882S",
    "15548T",
    "64255X",
    "01447S",
    "16033T",
    "65016X",
    "65207X",
    "65018X",
    "64219X",
    "01551S",
    "10737T",
    "17406T",
    "10133T",
    "ST16",
    "12852T",
    "07519C",
    "64084X",
    "64085X",
    "64245X",
    "65319X",
    "64246X",
    "01466S",
    "01525S",
    "12445T",
    "01847S",
    "64236X",
    "CE07",
    "64264X",
    "64240X",
    "65609X",
    "65263X",
    "01368S",
    "13974T",
    "64243X",
    "65190X",
    "65376X",
    "14264T",
    "11469T",
    "13598T",
    "16071T",
    "L03",
    "64221X",
    "01043S",
    "60024X",
    "G12",
    "01036T",
    "10581T",
    "15196T",
    "SJ06",
    "64253X",
    "01804S",
    "15632T",
    "64251X",
    "64280X",
    "L23",
    "65333X",
    "14004T",
    "65058X",
    "65229X",
    "PR21",
    "01598S",
    "G02",
    "01438S",
    "05261C",
    "01439S",
    "01437S",
    "75088U",
    "11308T",
    "01581S",
    "01907S",
    "06697C",
    "64265X",
    "14336T",
    "65310X",
    "MO24",
    "12108L",
    "01543S",
    "07132C",
    "10886T",
    "16453T",
    "64026X",
    "65370X",
    "64027X",
    "01572S",
    "01801S",
    "17082T",
    "HP21",
    "00358T",
    "15800T",
    "10994T",
    "50008A",
    "65125X",
    "65197X",
    "SC22",
    "10312T",
    "01418S",
    "12133T",
    "01684S",
    "64281X",
    "65488X",
    "17768T",
    "00192T",
    "14384T",
    "15434T",
    "16191T",
    "20633A",
    "06191C",
    "06175C",
    "13534T",
    "15421T",
    "01441T",
    "L05",
    "65686X",
    "00145S",
    "01703S",
    "10454T",
    "12014L",
    "ST24",
    "65135X",
    "64279X",
    "00928T",
    "10935T",
    "10113T",
    "64153X",
    "64238X",
    "10650A",
    "35043A",
    "35041A",
    "LU05",
    "35044A",
    "01711S",
    "64099X",
    "65015X",
    "NA08",
    "65365X",
    "SM21",
    "65001X",
    "01014M",
    "16582T",
    "17932T",
    "BJ21",
    "65504X",
    "12853T",
    "12055T",
    "11057T",
    "01501S",
    "16066T",
    "01669S",
    "01676S",
    "14421T",
    "65022X",
    "IG21",
    "65205X",
    "01566S",
    "01577S",
    "60017X",
    "65063X",
    "65157X",
    "65162X",
    "65182X",
    "01620S",
    "06213C",
    "02822A",
    "CH05",
    "01480S",
    "01423S",
    "01555S",
    "MO25",
    "07597M",
    "G09",
    "01517S",
    "62075X",
    "12502T",
    "10113A",
    "65041X",
    "65042X",
    "65746X",
    "SL13",
    "01417S",
    "65051X",
    "65408X",
    "VT42",
    "65446X",
    "01504S",
    "01609S",
    "01651S",
    "12971T",
    "PR24",
    "65052X",
    "01858S",
    "14431T",
    "14466T",
    "65053X",
    "65509X",
    "65054X",
    "01830S",
    "12310T",
    "HP04",
    "65064X",
    "11355T",
    "01859T",
    "01413S",
    "01862T",
    "15833T",
    "17685T",
    "MA02",
    "14083T",
    "02128T",
    "05394C",
    "12571T",
    "16541T",
    "62039X",
    "60035X",
    "09143C",
    "16892T",
    "16926T",
    "17512T",
    "17347T",
    "01770S",
    "12389L",
    "S02",
    "00218S",
    "00682M",
    "U10",
    "65395X",
    "11157T",
    "15971T",
    "65690X",
    "65072X",
    "01462S",
    "12332T",
    "16266T",
    "65256X",
    "01876S",
    "01665S",
    "07412M",
    "01743S",
    "65145X",
    "14405T",
    "01226T",
    "01473S",
    "01713S",
    "65129X",
    "PR23",
    "65762X",
    "13576T",
    "65166X",
    "65185X",
    "65244X",
    "65391X",
    "01885S",
    "05299C",
    "01395S",
    "01759T",
    "10015T",
    "12450T",
    "12558T",
    "14284T",
    "15378T",
    "76084U",
    "65164X",
    "01469S",
    "01520M",
    "01522S",
    "01935S",
    "10894T",
    "16103T",
    "CH22",
    "01628S",
    "14583T",
    "65352X",
    "15346T",
    "12798T",
    "A24",
    "01524S",
    "65350X",
    "65219X",
    "15288T",
    "50010A",
    "65230X",
    "65400X",
    "65298X",
    "15543T",
    "65215X",
    "65260X",
    "65332X",
    "65599X",
    "CH23",
    "65810X",
    "50290A",
    "65065X",
    "65076X",
    "65744X",
    "65078X",
    "01718T",
    "64206X",
    "CE06",
    "64288X",
    "05195C",
    "64263X",
    "65384X",
    "SL12",
    "Z06",
    "05453C",
    "07092C",
    "65591X",
    "64198X",
    "10463T",
    "01839S",
    "01637T",
    "10138T",
    "20892A",
    "16308T",
    "05927C",
    "06125C",
    "14549T",
    "Z01",
    "10980T",
    "00999S",
    "10147T",
    "01611S",
    "13042T",
    "65106X",
    "65394X",
    "IG22",
    "65421X",
    "65141X",
    "65286X",
    "65380X",
    "65383X",
    "65558X",
    "G17",
    "01643S",
    "17769T",
    "65224X",
    "01381S",
    "01442S",
    "10218A",
    "64146X",
    "15843T",
    "17903T",
    "01285T",
    "11277T",
    "15929T",
    "64124X",
    "64123X",
    "01548S",
    "15317T",
    "21157A",
    "PR12",
    "62046X",
    "10697T",
    "10700T",
    "PR11",
    "00179T",
    "03507A",
    "11346T",
    "65497X",
    "HP02",
    "15816T",
    "01893T",
    "01420S",
    "04934A",
    "05143C",
    "10347T",
    "10478A",
    "ST14",
    "15202T",
    "01852S",
    "01825S",
    "01693S",
    "01889S",
    "17621T",
    "65233X",
    "65184X",
    "60030X",
    "10800A",
    "35267A",
    "10992T",
    "01086T",
    "17391T",
    "01283T",
    "03389A",
    "01576S",
    "65249X",
    "65401X",
    "65490X",
    "01554S",
    "01760S",
    "01820S",
    "65267X",
    "65658X",
    "65386X",
    "01766S",
    "01794S",
    "65270X",
    "65271X",
    "01464S",
    "06021C",
    "06070C",
    "01283S",
    "17202T",
    "62010X",
    "CH04",
    "62011X",
    "01444S",
    "13658T",
    "01850S",
    "65305X",
    "65427X",
    "65428X",
    "65644X",
    "01610S",
    "07490C",
    "01276S",
    "35133A",
    "01385S",
    "13718T",
    "65303X",
    "SC20",
    "65327X",
    "01747S",
    "65295X",
    "65296X",
    "65477X",
    "65343X",
    "65312X",
    "65355X",
    "65574X",
    "65437X",
    "01657S",
    "65313X",
    "65347X",
    "65314X",
    "60015X",
    "65317X",
    "65435X",
    "C42",
    "65494X",
    "01441S",
    "01607S",
    "01792S",
    "65320X",
    "65367X",
    "MO22",
    "65409X",
    "IG15",
    "00840S",
    "16018T",
    "65589X",
    "62072X",
    "10799T",
    "00202T",
    "15318T",
    "03301A",
    "05868C",
    "65475X",
    "07878C",
    "16187T",
    "01975S",
    "10689T",
    "64029X",
    "64028X",
    "64202X",
    "10441T",
    "01864S",
    "A11",
    "11554A",
    "01641S",
    "13350T",
    "65351X",
    "65500X",
    "65359X",
    "01819S",
    "16206T",
    "65363X",
    "65368X",
    "65760X",
    "65670X",
    "00967T",
    "10867A",
    "17134T",
    "65118X",
    "01880T",
    "00956T",
    "01654S",
    "02621A",
    "SR09",
    "10277A",
    "01742S",
    "12545T",
    "13418T",
    "65360X",
    "65393X",
    "65441X",
    "65761X",
    "65518X",
    "06566C",
    "06565C",
    "10901A",
    "16096T",
    "65795X",
    "65364X",
    "05262C",
    "07931C",
    "MO13",
    "12599T",
    "65436X",
    "65526X",
    "65438X",
    "01474S",
    "65371X",
    "65537X",
    "65639X",
    "PR26",
    "65640X",
    "01678S",
    "01933S",
    "11205A",
    "13712T",
    "65375X",
    "65414X",
    "65594X",
    "01539S",
    "65403X",
    "65265X",
    "06661C",
    "12778T",
    "64277X",
    "SJ09",
    "00907T",
    "11183T",
    "65079X",
    "65783X",
    "12396T",
    "17767T",
    "65277X",
    "12964T",
    "NA06",
    "01604S",
    "01827S",
    "06918C",
    "65499X",
    "65406X",
    "11058T",
    "16047T",
    "00454T",
    "07130C",
    "10127A",
    "16490T",
    "11270T",
    "01425T",
    "21555A",
    "01520S",
    "14510T",
    "65411X",
    "HP22",
    "65565X",
    "02030T",
    "B18",
    "16961T",
    "01877S",
    "01769S",
    "65390X",
    "65415X",
    "65434X",
    "AP43",
    "00923T",
    "01289S",
    "01632S",
    "65336X",
    "10483T",
    "11199T",
    "11463A",
    "00338T",
    "00860S",
    "00818T",
    "64260X",
    "02680A",
    "01603S",
    "12514T",
    "14386T",
    "01388S",
    "65418X",
    "A42",
    "65449X",
    "10706T",
    "01790S",
    "SR05",
    "13896T",
    "00767S",
    "64015X",
    "01718S",
    "01738S",
    "14540T",
    "65416X",
    "PR25",
    "65451X",
    "16248T",
    "L21",
    "62076X",
    "07868C",
    "05560C",
    "01041S",
    "05326C",
    "01535S",
    "65443X",
    "64158X",
    "10581A",
    "01601S",
    "10283T",
    "15529T",
    "13642T",
    "15540T",
    "62059X",
    "20803A",
    "64030X",
    "01578S",
    "12199L",
    "65426X",
    "65445X",
    "65508X",
    "65570X",
    "65603X",
    "01777T",
    "12921T",
    "10308T",
    "00296T",
    "13035T",
    "65254X",
    "15602T",
    "01498S",
    "01754S",
    "06915C",
    "C41",
    "65692X",
    "07258C",
    "01695S",
    "65463X",
    "CL21",
    "65473X",
    "01636S",
    "65458X",
    "65465X",
    "65498X",
    "A41",
    "01463S",
    "00948M",
    "01087S",
    "15465T",
    "21386A",
    "SJ01",
    "00851T",
    "12012T",
    "11281T",
    "65585X",
    "65346X",
    "06399C",
    "14632T",
    "65444X",
    "65527X",
    "65515X",
    "65466X",
    "14427T",
    "15789T",
    "65460X",
    "HP24",
    "65530X",
    "00973S",
    "07363C",
    "00155T",
    "11003T",
    "14075T",
    "21778A",
    "16464T",
    "65485X",
    "65566X",
    "L22",
    "15714T",
    "15484T",
    "16270T",
    "01720S",
    "15772T",
    "MO23",
    "65470X",
    "01668S",
    "16106T",
    "65487X",
    "65524X",
    "01791S",
    "00089S",
    "60094X",
    "60095X",
    "76076U",
    "08836C",
    "13408T",
    "01410T",
    "03967A",
    "13311T",
    "15875T",
    "65719X",
    "64244X",
    "01902S",
    "17917T",
    "65502X",
    "65523X",
    "65682X",
    "65622X",
    "08036C",
    "65029X",
    "06363C",
    "Z09",
    "01727S",
    "07708M",
    "65491X",
    "65496X",
    "65528X",
    "SI21",
    "65615X",
    "62015X",
    "01972T",
    "16233T",
    "10254A",
    "01455S",
    "14556T",
    "65721X",
    "01485M",
    "17168T",
    "65777X",
    "65586X",
    "09084C",
    "12405T",
    "05216C",
    "65505X",
    "01823S",
    "11088T",
    "64271X",
    "65126X",
    "64276X",
    "01853S",
    "65525X",
    "65741X",
    "65680X",
    "06068C",
    "Z15",
    "60083X",
    "01894S",
    "10677T",
    "64075X",
    "06529C",
    "64076X",
    "07001T",
    "64154X",
    "10944T",
    "01799S",
    "65510X",
    "65617X",
    "65676X",
    "01950S",
    "01951S",
    "16729T",
    "13644T",
    "01880S",
    "15387T",
    "65511X",
    "65513X",
    "65636X",
    "AP42",
    "10423A",
    "HP07",
    "65681X",
    "01602S",
    "SC23",
    "65495X",
    "07648M",
    "15783T",
    "HP23",
    "17620T",
    "64041X",
    "60010X",
    "35069A",
    "01948S",
    "65534X",
    "65567X",
    "65554X",
    "65533X",
    "07013C",
    "60054X",
    "64254X",
    "65392X",
    "05251C",
    "00140S",
    "08120C",
    "01815S",
    "01828S",
    "65531X",
    "65532X",
    "U41",
    "65539X",
    "01101S",
    "62020X",
    "65598X",
    "64257X",
    "14561T",
    "01746S",
    "01757S",
    "65471X",
    "65430X",
    "01145T",
    "64105X",
    "NA01",
    "01619S",
    "15234T",
    "65541X",
    "G19",
    "65634X",
    "15788T",
    "65542X",
    "65823X",
    "65600X",
    "01564S",
    "01848S",
    "65552X",
    "01867S",
    "01172S",
    "15764T",
    "11465T",
    "01708T",
    "10104A",
    "64287X",
    "13612T",
    "01854S",
    "06556C",
    "65547X",
    "65614X",
    "65548X",
    "01427T",
    "10320A",
    "64115X",
    "64116X",
    "SC13",
    "64117X",
    "00211T",
    "00219T",
    "12300T",
    "17343T",
    "12831T",
    "65551X",
    "65808X",
    "65793X",
    "01423T",
    "13453T",
    "01487S",
    "64205X",
    "06642C",
    "21028A",
    "02133A",
    "00209T",
    "00542S",
    "07150C",
    "65717X",
    "65457X",
    "60096X",
    "60097X",
    "65013X",
    "65821X",
    "G04",
    "02266A",
    "20609A",
    "01008S",
    "64203X",
    "13695T",
    "65572X",
    "VM41",
    "65673X",
    "60042X",
    "65522X",
    "00795S",
    "01637S",
    "64262X",
    "10988T",
    "01534M",
    "65592X",
    "65616X",
    "CL23",
    "01723S",
    "65581X",
    "65583X",
    "65582X",
    "01743T",
    "64100X",
    "64102X",
    "NA05",
    "64189X",
    "65584X",
    "01580S",
    "06372C",
    "Z14",
    "06522C",
    "07669C",
    "12073T",
    "15405T",
    "VM20",
    "07667C",
    "17657T",
    "07668C",
    "07666C",
    "00889S",
    "01435T",
    "16072T",
    "13805T",
    "00380T",
    "13374T",
    "64106X",
    "13517T",
    "01879S",
    "01974S",
    "01983S",
    "16385T",
    "65413X",
    "65637X",
    "65571X",
    "10132A",
    "00256S",
    "01753S",
    "64002X",
    "75000U",
    "ST12",
    "17279T",
    "17489T",
    "65595X",
    "65651X",
    "65545X",
    "65546X",
    "CE23",
    "01802S",
    "00801S",
    "01431S",
    "65587X",
    "15777T",
    "00827S",
    "00642M",
    "10182T",
    "65472X",
    "15430T",
    "01989S",
    "16257T",
    "65593X",
    "65597X",
    "01807S",
    "65646X",
    "14563T",
    "00753S",
    "01616S",
    "13002T",
    "04564A",
    "01048T",
    "01811S",
    "07732C",
    "01051T",
    "13968T",
    "01053T",
    "07740C",
    "01810S",
    "U15",
    "65000X",
    "65620X",
    "01750S",
    "01316S",
    "05297C",
    "65641X",
    "06912C",
    "00487S",
    "PG06",
    "17994T",
    "05384C",
    "65612X",
    "65813X",
    "65674X",
    "01599S",
    "65607X",
    "65648X",
    "65774X",
    "65743X",
    "65610X",
    "00581T",
    "14677T",
    "01822S",
    "00575T",
    "01821S",
    "00576T",
    "07104C",
    "65633X",
    "65771X",
    "65732X",
    "00354T",
    "11411T",
    "03412A",
    "65611X",
    "65669X",
    "SI22",
    "65811X",
    "65613X",
    "65656X",
    "65764X",
    "65665X",
    "07018C",
    "16332T",
    "65678X",
    "65618X",
    "01831S",
    "10370A",
    "10982A",
    "14584T",
    "01476S",
    "64237X",
    "01104T",
    "01829S",
    "17055T",
    "21117A",
    "64093X",
    "65374X",
    "11700A",
    "64252X",
    "C14",
    "21661A",
    "65687X",
    "21083A",
    "11181T",
    "11488T",
    "12550T",
    "12839T",
    "CH13",
    "62037X",
    "01838S",
    "02115A",
    "SA16",
    "14355T",
    "01992T",
    "07897C",
    "15975T",
    "PT03",
    "01843S",
    "01837S",
    "01533S",
    "01840S",
    "20614A",
    "16069T",
    "10058T",
    "01841S",
    "65255X",
    "21111A",
    "65544X",
    "00504T",
    "62065X",
    "65486X",
    "SA15",
    "65668X",
    "01844S",
    "10053T",
    "65628X",
    "12429T",
    "01845S",
    "00462T",
    "00424T",
    "17266T",
    "00421T",
    "11568A",
    "12344T",
    "64278X",
    "65737X",
    "65621X",
    "65626X",
    "15512T",
    "65638X",
    "65653X",
    "07729C",
    "10221T",
    "10461T",
    "64218X",
    "11364T",
    "10915T",
    "00139T",
    "00136T",
    "10509T",
    "14232T",
    "03477T",
    "65452X",
    "65733X",
    "65824X",
    "65453X",
    "PR27",
    "01291S",
    "12156T",
    "05252C",
    "60032X",
    "SI09",
    "65168X",
    "01860S",
    "11472T",
    "64220X",
    "01595S",
    "07925C",
    "07951C",
    "14490T",
    "07017C",
    "CE22",
    "65649X",
    "00041T",
    "01872S",
    "11425T",
    "11124T",
    "07952C",
    "11383T",
    "64022X",
    "65036X",
    "07954C",
    "00289S",
    "01969S",
    "60037X",
    "35008A",
    "01822T",
    "02903A",
    "64142X",
    "05273C",
    "65725X",
    "65655X",
    "01674M",
    "53081A",
    "65424X",
    "65507X",
    "AP41",
    "65664X",
    "15795T",
    "65787X",
    "65660X",
    "06260C",
    "65722X",
    "65671X",
    "01878S",
    "65659X",
    "65806X",
    "65742X",
    "65666X",
    "65713X",
    "VT41",
    "65786X",
    "01506S",
    "01992S",
    "07903M",
    "65342X",
    "12898T",
    "01258S",
    "53080A",
    "65675X",
    "65766X",
    "65738X",
    "01673S",
    "06274C",
    "01890S",
    "00027T",
    "11063A",
    "01917S",
    "01893S",
    "IG11",
    "00023T",
    "06698C",
    "60136X",
    "65685X",
    "00389T",
    "65301X",
    "65288X",
    "65253X",
    "65339X",
    "65335X",
    "12386T",
    "65278X",
    "01705S",
    "01726M",
    "17480T",
    "65759X",
    "65781X",
    "65767X",
    "16021T",
    "00757T",
    "13045T",
    "16017T",
    "65694X",
    "65695X",
    "16120T",
    "65691X",
    "15413T",
    "65264X",
    "SL14",
    "65828X",
    "07771C",
    "00380S",
    "60067X",
    "60068X",
    "65201X",
    "05830C",
    "00439T",
    "02423A",
    "10464T",
    "05592C",
    "00176T",
    "01370S",
    "65734X",
    "Z41",
    "10613A",
    "13261T",
    "35254A",
    "07744C",
    "01927S",
    "65696X",
    "65697X",
    "65698X",
    "65699X",
    "65700X",
    "65701X",
    "65702X",
    "65708X",
    "65711X",
    "01924S",
    "MI42",
    "60112X",
    "64283X",
    "65017X",
    "01928S",
    "01931S",
    "08025M",
    "17949T",
    "65703X",
    "65765X",
    "65792X",
    "65789X",
    "07964M",
    "17540T",
    "65747X",
    "MI41",
    "65805X",
    "12775T",
    "64131X",
    "64132X",
    "64133X",
    "LS12",
    "65222X",
    "65704X",
    "65705X",
    "65706X",
    "65709X",
    "65718X",
    "65710X",
    "65707X",
    "08033M",
    "01483S",
    "65632X",
    "65723X",
    "01962S",
    "65715X",
    "65385X",
    "53071A",
    "65735X",
    "S42",
    "65736X",
    "01739M",
    "65727X",
    "65728X",
    "S41",
    "65729X",
    "01440T",
    "07680M",
    "65516X",
    "64021X",
    "00327T",
    "00329T",
    "64160X",
    "01739S",
    "12326T",
    "13567T",
    "SJ04",
    "62068X",
    "PL05",
    "10016A",
    "64194X",
    "65234X",
    "U12",
    "65688X",
    "65730X",
    "01307S",
    "65745X",
    "01736S",
    "CH02",
    "16727T",
    "01952S",
    "08372C",
    "17069T",
    "15720T",
    "15708T",
    "14095T",
    "06368C",
    "06719C",
    "65740X",
    "14464T",
    "10722T",
    "11374T",
    "62025X",
    "62026X",
    "62027X",
    "62028X",
    "62029X",
    "62030X",
    "13251T",
    "10142T",
    "10437A",
    "10214T",
    "07882C",
    "01262S",
    "01967S",
    "01972S",
    "17737T",
    "65753X",
    "65752X",
    "12071T",
    "65455X",
    "64152X",
    "01730M",
    "01970S",
    "17326T",
    "02208A",
    "02995A",
    "10505T",
    "09147C",
    "17902T",
    "65749X",
    "65750X",
    "65801X",
    "65772X",
    "01724M",
    "01973S",
    "17124T",
    "65754X",
    "65794X",
    "65755X",
    "17843T",
    "65778X",
    "65756X",
    "65748X",
    "65776X",
    "65779X",
    "CE21",
    "65788X",
    "64065X",
    "65178X",
    "A22",
    "65307X",
    "35244A",
    "60123X",
    "65775X",
    "11031T",
    "00866S",
    "01701T",
    "ST15",
    "64004X",
    "01469T",
    "10703T",
    "65005X",
    "A18",
    "65353X",
    "06450C",
    "B04",
    "64215X",
    "LU02",
    "35027A",
    "65829X",
    "65763X",
    "65677X",
    "01735T",
    "60070X",
    "65200X",
    "00396T",
    "10285T",
    "04431A",
    "01553T",
    "65768X",
    "16536T",
    "04224A",
    "10612A",
    "64081X",
    "01130T",
    "01727T",
    "14424T",
    "16899T",
    "ST11",
    "14130T",
    "CN04",
    "00682X",
    "65629X",
    "04030S",
    "CÑ21",
    "00556U",
    "04050S",
    "55460M",
    "65604X",
    "04010S",
    "65815X",
    "14982T",
    "00301A",
    "CÑ04",
    "15031T",
    "14329T",
    "30326A",
];

// ===== LISTA DE SUGERENCIA PARA TRABAJO EFECTUADO =====
const listadetrabajoefectuado = [
    "Cambio de interruptor de mínimo volumen de aceite (MVA) por interruptor de vacío (VA) y kit multifunción",
    "Retiro de seccionador de potencia (SP) e instalación de interruptor de vacío (VA) con kit multifunción",
    "Cambio de seccionador de potencia (SP) por SP con bobina de disparo",
    "Cambio de relé en mal estado",
    "Instalación de kit multifunción",
    "Cambio de interruptor en mal estado",
    "Cambio de interruptor de mínimo volumen de aceite (MVA) por interruptor MVA",
    "Prueba de relé en caliente",
    "Cambio de relé en caliente",
    "Completar kit multifunción",
    "Mantenimiento de interruptor de mínimo volumen de aceite (MVA)",
    "Mantenimiento de interruptor de vacío (VA)",
    "Retiro de barra directa e instalación de interruptor de vacío (VA) con kit multifunción",
    "Instalación de interruptor solo maniobra",
];

// ===== LISTA DE SUGERENCIA PARA MARCA DE EQUIPO =====
const ListaMarcaEquipo = [
    "ABB - SACE",
    "ALSTOM",
    "ABB",
    "SCHNEIDER",
    "SACE",
    "FELMEC",
    "MAGRINI GALILEO",
    "BBC - SACE",
    "BBC",
    "EFEN",
    "EIB",
    "GEC ALSTHOM",
    "ZWAE",
    "SIEMENS",
    "MERLIN GERIN",
    "INDUESTELLE",
    "TOZZI",
    "SPRECHER ENERGIE",
    "AEG-TELEFUNKEN",
    "SOCOL SF",
    "OERLIKON",
    "SOCOL S.A.",
    "NOJA",
    "ARTECHE",
    "LG",
    "CETEM",
    "S&C",
    "DUESTELLE",
];

// ===== LISTA DE SUGERENCIA PARA MODELO DE EQUIPO =====
const ListaModeloEquipo = [
    "RM17.5P",
    "DPI",
    "VD4",
    "EVOLIS",
    "12MG250",
    "SG10K280",
    "ORTHOFLUOR",
    "OMB-12",
    "SION",
    "17MG250",
    "17MG350",
    "RG17.5P",
    "SPAIT B",
    "10MG250",
    "EASY PACT",
    "SF SET Tipo 1",
    "SPA1T-B",
    "RG10.50",
    "HV 404/31-12-115003",
    "RM12.5P",
    "SCRTSGV",
    "SF1 Tipo 2",
    "UNISEC",
    "8DJH",
    "SCR-V-SG",
    "NALF12-6",
    "17MG500",
    "ECOSMART",
    "SCRSGV",
    "SPRECHER",
    "NALF",
    "HAD",
    "17MG2500",
    "DSF 354/17",
    "SF SET Tipo 2",
    "SCR SGVT",
    "SPAIT-B",
    "NALF 24-6",
    "SM6",
    "RM 17.5",
    "UNISEC SBC",
    "NALF 12-6",
    "SPSIT B",
    "RM17.5P-50",
    "GAV/V24",
    "SCR SGV",
    "8DJH-M",
    "NALF 12-4",
    "VB5",
    "VIP 201",
    "HV 12.8",
    "GAU/U12",
    "SCRVSG",
    "UNISEC SFC",
    "SM6-QM",
    "SCR SG V",
    "RM15.5P",
    "SCR-SG-V",
    "RM 17.5P",
    "BROWN BOVERI",
    "SGR56",
    "OSN27-12-800",
    "HIMEC",
    "SAP1GB",
    "RM175850",
    "SCRTGV",
    "RM 17.5P50",
    "NSSC / SA",
    "SIMOSEC",
    "SPAI-B",
    "VISTA",
    "SCRT SE V",
    "NALF 12-6A-210",
    "SPRLT-R",
    "RM 17,5 P-50",
    "SM6-IM",
    "3AE 1184-1",
    "SCR",
    "SG10K2080",
    "DPI 4-25",
    "RM 12.5",
    "RM 17,5P -50",
    "scrt56u",
    "SM6-CME",
    "17M6500",
    "SM6 - IM",
    "SCRV",
    "SIMOSEL-L1-AR",
];
// ===== LISTA DE SUGERENCIA PARA MARCA DE RELE =====
const ListaMarcaRele = [
    "ARCTEQ",
    "ABB",
    "SEG",
    "BBC",
    "SIEMENS",
    "ALSTOM",
    "SCHNEIDER",
    "MAGNINI",
    "NOJA",
    "ARTECHE",
    "WIP-41",
    "BROWN BOVERI",
];
// ===== LISTA DE SUGERENCIA PARA MODELO DE EQUIPO =====
const ListaModeloRele = [
    "AQ-F213",
    "REX 615",
    "REF 615",
    "MRI3",
    "HB",
    "7SR51",
    "REF 611",
    "PS421",
    "P124",
    "VIP 13",
    "REX 521",
    "SEG-WIP1",
    "VIP 201",
    "7SR12",
    "7SR5111",
    "7SR11",
    "REF 610",
    "MCGG",
    "7SR224",
    "7SJ602",
    "SEPAM S-20",
    "SEPAM S-40",
    "PR511",
    "DPU 2000R",
    "P121",
    "REF 630",
    "REM543",
    "VIP 300",
    "DPU 1500R",
    "P123",
    "SEPAM",
    "RC.10ES",
    "BBC",
    "P132",
    "NALF",
    "7SR511",
];

// ===== 2. FUNCIÓN DE AUTOCOMPLETADO  =====
function setupAutocomplete(inputElement, dataList, suggestionsElement, onSelectCallback = null) {
    inputElement.addEventListener("input", () => {
        const value = inputElement.value.trim().toUpperCase();
        suggestionsElement.innerHTML = "";
        suggestionsElement.style.display = "none";

        if (value.length === 0) return;

        const filteredData = dataList.filter(item => 
        // Convertimos el elemento de la lista a mayúsculas
        item.toUpperCase()
        // Y verificamos si INCLUYE el valor del usuario (ya convertido a mayúsculas)
        .includes(value) 
    );

        if (filteredData.length > 0) {
            suggestionsElement.style.display = "block";
            filteredData.forEach(item => {
                const li = document.createElement("li");
                li.textContent = item;
            li.addEventListener("click", () => {
                inputElement.value = item; // 1. Se establece el valor completo
                suggestionsElement.style.display = "none";
                inputElement.focus();
                
            // 2. Si se proporciona una función de callback, la ejecutamos AQUÍ
                if (onSelectCallback) {
                    onSelectCallback(); 
                }
            });
                suggestionsElement.appendChild(li);
            });
        }
    });
    
    document.addEventListener("click", (e) => {
        if (e.target !== inputElement && !suggestionsElement.contains(e.target)) {
            suggestionsElement.style.display = "none";
        }
    });

    inputElement.addEventListener("keydown", (e) => {
        if (e.key === "Escape") {
            suggestionsElement.style.display = "none";
        }
    });
}

// ===== 3. INICIALIZAR LA FUNCIÓN PARA CADA CAMPO CON COMPROBACIÓN =====
// El código se ejecutará siempre, pero solo inicializará el autocompletado si los elementos existen
// en la vista actual.

// --- Campo 1: SED (viewParte1) ---
const inputSED = document.getElementById("sed");
const suggestionsListSED = document.getElementById("suggestions-sed");
if (inputSED && suggestionsListSED) {
    // 💡 PASAR el callback de concatenación como 4º argumento
    setupAutocomplete(inputSED, listaNodosIniciales, suggestionsListSED, actualizarConcatenacion);
}

// --- Campo 2: nodofinal (viewParte1) ---
const inputNodoFinal = document.getElementById("nodofinal");
const suggestionsListNodoFinal = document.getElementById("suggestions-nodofinal");
if (inputNodoFinal && suggestionsListNodoFinal) {
    // 💡 PASAR el callback de concatenación
    setupAutocomplete(inputNodoFinal, listaNodosFinales, suggestionsListNodoFinal, actualizarConcatenacion);
}

// --- Campo 3: codigo (viewCambioAjuste) ---
const inputCodigo = document.getElementById("codigo");
const suggestionsListCodigo = document.getElementById("suggestions-codigo");
if (inputCodigo && suggestionsListCodigo) {
    // 💡 PASAR el callback de concatenación CambioAjuste
    setupAutocomplete(inputCodigo, listaNodosIniciales, suggestionsListCodigo, actualizarConcatenacionCambioAjuste);
}

// --- Campo 4: NodofinalCA (viewCambioAjuste) ---
const inputNodoFinalCA = document.getElementById("NodofinalCA");
const suggestionsListNodoFinalCA = document.getElementById("suggestions-NodofinalCA");
if (inputNodoFinalCA && suggestionsListNodoFinalCA) {
    // 💡 PASAR el callback de concatenación CambioAjuste
    setupAutocomplete(inputNodoFinalCA, listaNodosFinales, suggestionsListNodoFinalCA, actualizarConcatenacionCambioAjuste);
}

// --- Campo 5: Trabajo efectuado (viewParte4) ---
const inputTrabajoefectuado = document.getElementById("OtrasObservaciones");
const suggestionsListadotrabajo = document.getElementById("suggestions-trabajoefectuado");
if (inputTrabajoefectuado && suggestionsListadotrabajo) {
    // Llama a la función reutilizable sin callback de concatenación
    setupAutocomplete(inputTrabajoefectuado, listadetrabajoefectuado, suggestionsListadotrabajo); 
}

// --- Campo 6: Marca de equipo (viewParte1) ---
const inputMarcaEquipo = document.getElementById("marcaequipo");
const suggestionsMarcaEquipo = document.getElementById("suggestions-marcaequipo");
if (inputMarcaEquipo && suggestionsMarcaEquipo) {
    // Llama a la función reutilizable sin callback de concatenación
    setupAutocomplete(inputMarcaEquipo, ListaMarcaEquipo, suggestionsMarcaEquipo); 
}

// --- Campo 7: Modelo de equipo (viewParte1) ---
const inputModeloEquipo = document.getElementById("modeloequipo");
const suggestionsModeloEquipo = document.getElementById("suggestions-modeloequipo");
if (inputModeloEquipo && suggestionsModeloEquipo) {
    // Llama a la función reutilizable sin callback de concatenación
    setupAutocomplete(inputModeloEquipo, ListaModeloEquipo, suggestionsModeloEquipo); 
}

// --- Campo 8: Marca de rele (viewParte1) ---
const inputMarcaRele = document.getElementById("marcarele");
const suggestionsMarcaRele = document.getElementById("suggestions-marcarele");
if (inputMarcaRele && suggestionsMarcaRele) {
    // Llama a la función reutilizable sin callback de concatenación
    setupAutocomplete(inputMarcaRele, ListaMarcaRele, suggestionsMarcaRele); 
}

// --- Campo 9: Marca de rele (viewCambioAjuste) ---
const inputMarcaReleCA = document.getElementById("MarcaCA");
const suggestionsMarcaReleCA = document.getElementById("suggestions-marcaCA");
if (inputMarcaReleCA && suggestionsMarcaReleCA) {
    // Llama a la función reutilizable sin callback de concatenación
    setupAutocomplete(inputMarcaReleCA, ListaMarcaRele, suggestionsMarcaReleCA); 
}

// --- Campo 10: Modelo de rele (viewParte1) ---
const inputModeloRele = document.getElementById("modelorele");
const suggestionsModeloRele = document.getElementById("suggestions-modelorele");
if (inputModeloRele && suggestionsModeloRele) {
    // Llama a la función reutilizable sin callback de concatenación
    setupAutocomplete(inputModeloRele, ListaModeloRele, suggestionsModeloRele); 
}

// --- Campo 11: Modelo de rele (viewCambioAjuste) ---
const inputModeloReleCA = document.getElementById("ModeloCA");
const suggestionsModeloReleCA = document.getElementById("suggestions-modeloCA");
if (inputModeloReleCA && suggestionsModeloReleCA) {
    // Llama a la función reutilizable sin callback de concatenación
    setupAutocomplete(inputModeloReleCA, ListaModeloRele, suggestionsModeloReleCA); 
}

// =============================
// Helper globales (arreglan robustez y el scroll)
// =============================
function mostrarMensaje(mensaje, tipo = "success") {
  // función global reutilizable
  const toast = document.createElement("div");
  toast.className = `toast ${tipo}`;
  toast.textContent = mensaje;
  document.body.appendChild(toast);
  // Forzar reflow para animación
  setTimeout(() => toast.classList.add("show"), 100);
  // Remover automáticamente
  setTimeout(() => {
    toast.classList.remove("show");
    setTimeout(() => toast.remove(), 400);
  }, 5000);
}

function getFieldValue(id) {
  const el = document.getElementById(id);
  if (!el) return "";
  if (el.type === "checkbox") return el.checked ? "true" : "";
  if (el.tagName.toLowerCase() === "select") return el.value.trim();
  return el.value?.trim() || "";
}

// Encuentra el ancestro con scroll (si existe)
function getScrollParent(node) {
  if (!node) return document.scrollingElement || document.documentElement;
  let parent = node.parentElement;
  while (parent) {
    const style = getComputedStyle(parent);
    const overflowY = style.overflowY;
    if (overflowY === "auto" || overflowY === "scroll") return parent;
    parent = parent.parentElement;
  }
  return document.scrollingElement || document.documentElement;
}

// Hace scroll al elemento teniendo en cuenta header fijo
function scrollToElement(el) {
  if (!el) return;

  const parent = getScrollParent(el);
  const headerHeight = header ? header.offsetHeight : 0;
  const offsetExtra = 15; // espacio pequeño de margen

  // Calcula posición relativa dentro del scroll container
  const rectEl = el.getBoundingClientRect();
  const rectParent = parent.getBoundingClientRect();
  const topRelative = rectEl.top - rectParent.top + parent.scrollTop;

  const targetScroll = topRelative - headerHeight - offsetExtra;

  // Scroll suave
  parent.scrollTo({
    top: targetScroll,
    behavior: "smooth"
  });

  // En caso de que el contenedor sea el documento
  if (parent === document.documentElement || parent === document.scrollingElement) {
    window.scrollTo({
      top: el.offsetTop - headerHeight - offsetExtra,
      behavior: "smooth"
    });
  }
}

// Al adjuntar un campo inválido, escucha su input/change para limpiar estilos
function attachClearOnInput(field) {
  if (!field) return;
  const handler = () => {
    const val = (field.value || "").toString().trim();
    if (val !== "") {
      field.classList.remove("campo-invalido");
      const msg = field.parentElement.querySelector(".mensaje-error");
      if (msg) msg.remove();
      field.removeEventListener("input", handler);
      field.removeEventListener("change", handler);
    }
  };
  field.addEventListener("input", handler);
  field.addEventListener("change", handler);
}

// =============================
// Función showView centralizada
// =============================
function showView(viewToShow) {
  const allViews = document.querySelectorAll(".view");
  allViews.forEach(view => view.classList.remove("active-view"));
  viewToShow.classList.add("active-view");

  // Mostrar combobox solo en viewParte2 y viewParte3
  const combo = document.getElementById("combo-general");
  if (combo) {
    if (viewToShow.id === "viewParte2" || viewToShow.id === "viewParte3") {
      combo.style.display = "block";
      const backBtn = viewToShow.querySelector(".back-btn");
      if (backBtn && backBtn.nextSibling) {
        viewToShow.insertBefore(combo, backBtn.nextSibling);
      } else if (backBtn) {
        backBtn.insertAdjacentElement("afterend", combo);
      }
    } else {
      combo.style.display = "none";
    }
  }
}

// =============================
// Funciones auxiliares
// =============================
// Ir a la siguiente vista en orden
function showNext() {
  const allViews = Array.from(document.querySelectorAll(".view"));
  const currentIndex = allViews.findIndex(v => v.classList.contains("active-view"));
  if (currentIndex === -1) return;
  if (currentIndex < allViews.length - 1) {
    showView(allViews[currentIndex + 1]);
  }
}

// Generar código único
function generarCodigoUnico() {
  const fecha = new Date();
  const año = fecha.getFullYear();
  const mes = String(fecha.getMonth() + 1).padStart(2, '0');
  const dia = String(fecha.getDate()).padStart(2, '0');
  const hora = String(fecha.getHours()).padStart(2, '0');
  const min = String(fecha.getMinutes()).padStart(2, '0');
  const seg = String(fecha.getSeconds()).padStart(2, '0');
  return `${año}${mes}${dia}${hora}${min}${seg}`;
}

// =============================
// Eventos botones superiores
// =============================
btnFormatos.addEventListener("click", () => {
  mainTabs.classList.remove("hidden-tabs");
  header.classList.remove("hidden");
  btnFormatos.classList.add("active");
  btnFormatos.classList.remove("inactive");
  btnHistorial.classList.remove("active");
  btnHistorial.classList.add("inactive");
  showView(viewFormatos);
});

btnHistorial.addEventListener("click", () => {
  mainTabs.classList.remove("hidden-tabs");
  header.classList.remove("hidden");
  btnHistorial.classList.add("active");
  btnHistorial.classList.remove("inactive");
  btnFormatos.classList.remove("active");
  btnFormatos.classList.add("inactive");
  showView(viewHistorial);
});

// =============================
// Botón check (visor PDF)
// =============================
if (nextButton) {
  nextButton.addEventListener("click", () => {
    const codigo = generarCodigoUnico();
    document.getElementById("CodigoUnico").value = codigo;
    document.getElementById("CodigoUnicoCA").value = codigo;
    inicializarFechaYSemana("fecha", "semana");
    inicializarFechaYSemana("fechaCA", "SemanaCA");
    mainTabs.classList.add("hidden-tabs");
    header.classList.add("hidden");
    showView(viewParte1);
  });
}

// =============================
// Botones de retroceso
// =============================
if (backButton) {
  backButton.addEventListener("click", () => {
    mainTabs.classList.remove("hidden-tabs");
    header.classList.remove("hidden");
    showView(viewFormatos);
  });
}

if (backButton1) {
  backButton1.addEventListener("click", () => showView(viewParte1));
}
if (backButton2) {
  backButton2.addEventListener("click", () => showView(viewParte2));
}
if (backButton3) {
  backButton3.addEventListener("click", () => showView(viewParte3));
}
if (backButton4) {
  backButton4.addEventListener("click", () => {
    mainTabs.classList.remove("hidden-tabs");
    header.classList.remove("hidden");
    showView(viewFormatos);
  });
}

// =============================
// Selección de formato (PDF)
// =============================
if (formatoCards && formatoCards.length) {
  formatoCards.forEach(card => {
    card.addEventListener("click", () => {
      formatoCards.forEach(c => c.classList.remove("active"));
      card.classList.add("active");

      const pdfFile = card.getAttribute("data-pdf");
      if (pdfFile && pdfViewer) pdfViewer.src = pdfFile;

      if (nextButton) nextButton.classList.remove("hidden"); // Se habilita el botón "Siguiente"
    });
  });
}
// =============================
// Acción del botón "Siguiente"
// =============================
if (nextButton) {
  nextButton.addEventListener("click", () => {
    const activeCard = document.querySelector(".formato-card.active");
    if (!activeCard) return; // por si no seleccionaron nada

    const selectedPdf = activeCard.getAttribute("data-pdf");

    // Ocultar todas las vistas
    document.querySelectorAll(".view").forEach(v => v.classList.remove("active-view"));

    if (selectedPdf === "Protocolodepruebas.pdf") {
      // Formulario A (4 partes)
      document.getElementById("viewParte1").classList.add("active-view");
    } else if (selectedPdf === "Protocolodepruebas.pdf") {
      // Formulario B (nuevo formulario - 4 partes)
      document.getElementById("viewParte1").classList.add("active-view");
    } else if (selectedPdf === "Cambiodeajustes.pdf") {
      // Formulario C (nuevo formulario - 1 parte)
      document.getElementById("viewCambioAjuste").classList.add("active-view");
    }
  });
}

// =============================
// Cálculo de SEMANA
// =============================
function parseDateString(dateStr) {
  if (!dateStr) return null;
  const parts = dateStr.split("-");
  return { y: Number(parts[0]), m: Number(parts[1]), d: Number(parts[2]) };
}

function utcTimestamp(y, m, d) {
  return Date.UTC(y, m - 1, d);
}

function primerLunesOnOrBeforeJan1UTC(year) {
  const jan1Utc = utcTimestamp(year, 1, 1);
  const weekday = new Date(jan1Utc).getUTCDay();
  const daysBack = (weekday + 6) % 7;
  return jan1Utc - daysBack * 24 * 60 * 60 * 1000;
}

function calcularSemanaDesdeYYYYMMDD(dateStr) {
  const pd = parseDateString(dateStr);
  if (!pd) return "";
  const selUtc = utcTimestamp(pd.y, pd.m, pd.d);
  const anio = pd.y;

  const primerLunesAnioUtc = primerLunesOnOrBeforeJan1UTC(anio);
  const primerLunesSiguienteUtc = primerLunesOnOrBeforeJan1UTC(anio + 1);

  function diffDays(aUtc, bUtc) {
    return Math.floor((bUtc - aUtc) / (24 * 60 * 60 * 1000));
  }

  let semana, resultado;
  if (selUtc >= primerLunesSiguienteUtc) {
    const dias = diffDays(primerLunesSiguienteUtc, selUtc);
    semana = Math.min(52, Math.floor(dias / 7) + 1);
    resultado = `Semana ${semana}`;
  } else if (selUtc >= primerLunesAnioUtc) {
    const dias = diffDays(primerLunesAnioUtc, selUtc);
    semana = Math.min(52, Math.floor(dias / 7) + 1);
    resultado = `Semana ${semana}`;
  } else {
    const primerLunesPrevUtc = primerLunesOnOrBeforeJan1UTC(anio - 1);
    const dias = diffDays(primerLunesPrevUtc, selUtc);
    semana = Math.min(52, Math.floor(dias / 7) + 1);
    resultado = `Semana ${semana}`;
  }

  return resultado;
}

// =============================
// Inicializar fecha + semana (GENÉRICO, REEMPLAZA TU BLOQUE ACTUAL)
// =============================
function inicializarFechaYSemana(idFecha, idSemana) {
  const fechaInput = document.getElementById(idFecha);
  const semanaInput = document.getElementById(idSemana);

  if (!fechaInput || !semanaInput) return;

  // Establecer fecha actual
  const hoy = new Date();
  const anio = hoy.getFullYear();
  const mes = String(hoy.getMonth() + 1).padStart(2, '0');
  const dia = String(hoy.getDate()).padStart(2, '0');
  fechaInput.value = `${anio}-${mes}-${dia}`;

  // Función de actualización
  const actualizar = () => {
    const val = fechaInput.value;
    semanaInput.value = val ? calcularSemanaDesdeYYYYMMDD(val) : "";
  };

  // Eventos para recalcular semana
  fechaInput.addEventListener("change", actualizar);
  fechaInput.addEventListener("input", actualizar);

  // Calcular de inicio
  actualizar();
}

// =============================
// Inicializar todos los formularios
// =============================
document.addEventListener("DOMContentLoaded", () => {
  inicializarFechaYSemana("fecha", "semana");       // Formulario actual
  inicializarFechaYSemana("fechaCA", "SemanaCA");   // Nuevo formulario
});

// =============================
// Hora por defecto (establecer una vez)
// =============================
function establecerHoraActual() {
  const ahora = new Date();
  let horas = ahora.getHours();
  let minutos = ahora.getMinutes();

  horas = horas < 10 ? '0' + horas : horas;
  minutos = minutos < 10 ? '0' + minutos : minutos;

  const tiempo = `${horas}:${minutos}`;

  const horaInput = document.getElementById('hora');
  if (horaInput) horaInput.value = tiempo;
}
// Evento del botón "next-button"
document.getElementById("next-button").addEventListener("click", function() {
  establecerHoraActual(); // ✅ Se establece al presionar
});

// =============================
// Concatenación SED + Nodo final -> enlace (Primer Formulario)
// =============================
const SedInput = document.getElementById("sed");
const NodoFinalInput = document.getElementById("nodofinal");
const enlaceInput = document.getElementById("enlace");

function actualizarConcatenacion() {
  const sed = SedInput ? SedInput.value : "";
  const nodofinal = NodoFinalInput ? NodoFinalInput.value : "";
  if (enlaceInput) enlaceInput.value = sed + (nodofinal ? ("-" + nodofinal) : "");
}

// =============================
// Concatenación codigo + Nodo final en Cambio de ajuste -> Circuito (Segundo Formulario)
// =============================
const codigoInput = document.getElementById("codigo");
const codigofinalInput = document.getElementById("NodofinalCA");
const circuitoInput = document.getElementById("CircuitoCA");

function actualizarConcatenacionCambioAjuste() {
  const codigo = codigoInput ? codigoInput.value : "";
  const codigofinal = codigofinalInput ? codigofinalInput.value : "";
  if (circuitoInput) circuitoInput.value = codigo + (codigofinal ? ("-" + codigofinal) : "");
}

// 📌 Mantenemos los listeners de 'input' por si el usuario escribe el valor completo.
if (SedInput) SedInput.addEventListener("input", actualizarConcatenacion);
if (NodoFinalInput) NodoFinalInput.addEventListener("input", actualizarConcatenacion);
if (codigoInput) codigoInput.addEventListener("input", actualizarConcatenacionCambioAjuste);
if (codigofinalInput) codigofinalInput.addEventListener("input", actualizarConcatenacionCambioAjuste);

// =============================
// Encabezado dinámico (datos del equipo)
// (Usas id con espacios en el HTML, lo respetamos)
 // id en tu HTML: 'Encabezado de datos del equipo'
const selectEquipo = document.getElementById('equipo');
const encabezado = document.getElementById('Encabezado de datos del equipo');

if (selectEquipo && encabezado) {
  selectEquipo.addEventListener('change', () => {
    const valorSeleccionado = selectEquipo.value;
    const textoSeleccionado = selectEquipo.options[selectEquipo.selectedIndex].text;
    encabezado.textContent = textoSeleccionado ? `Datos del ${textoSeleccionado}` : 'Datos del equipo';
    encabezado.dataset.equipo = valorSeleccionado;
  });
}

// PONER VISIBLE EL COMBOBOX GENERAL CUANDO ESTÉS EN CONTENEDOR viewParte2 o viewParte3

function showView(viewToShow) {
  const allViews = document.querySelectorAll(".view");
  allViews.forEach(view => view.classList.remove("active-view"));
  viewToShow.classList.add("active-view");

  // 👇 Mostrar combobox solo en viewParte2 y viewParte3
  const combo = document.getElementById("combo-general");
  if (combo) {
    if (viewToShow.id === "viewParte2" || viewToShow.id === "viewParte3") {
      combo.style.display = "block";
      // buscar el botón de regresar en la vista actual
      const backBtn = viewToShow.querySelector(".back-btn");
      if (backBtn && backBtn.nextSibling) {
        viewToShow.insertBefore(combo, backBtn.nextSibling); 
      } else if (backBtn) {
        // si no hay nextSibling, lo metemos justo después del botón
        backBtn.insertAdjacentElement("afterend", combo);
      }
    } else {
      combo.style.display = "none";
    }
  }
}

// =============================
// Combobox dinámico (viewParte2 y viewParte3)
const opcionesCombobox = document.getElementById("opciones-combobox");

// Diccionario de opciones -> lista de IDs de campos a activar
const mapaOpciones = {
  "(51P) / 67P-1": ["campo51P", "ValorPrueba51P"],
  "(50P-1) / 67P-2": ["campo50P1", "ValorPrueba50P1"],
  "(50P-2)": ["campo50P2", "ValorPrueba50P2"],
  "(50P-3)": ["campo50P3", "ValorPrueba50P3"],
  "(51N)": ["campo51N", "ValorPrueba51N"],
  "(50N)": ["campo50N", "ValorPrueba50N"],
  "(67N)-1": ["campo67N1", "ValorPrueba67N1"],
  "(67N)-2": ["campo67N2", "ValorPrueba67N2"],
  "(46)": ["campo46", "ValorPrueba46"],
  "(59N)-1": ["campo59N1", "ValorPrueba59N1"],
  "(59N)-2": ["campo59N2", "ValorPrueba59N2"],
};

if (opcionesCombobox) {
  const actualizarCampos = () => {
    const seleccion = opcionesCombobox.value;

    // Ocultar todos los campos posibles (tanto viewParte2 como viewParte3)
    Object.values(mapaOpciones).flat().forEach(id => {
      const el = document.getElementById(id);
      if (el) el.classList.remove("activo");
    });

    // Mostrar solo los que corresponden a la selección
    if (mapaOpciones[seleccion]) {
      mapaOpciones[seleccion].forEach(id => {
        const el = document.getElementById(id);
        if (el) el.classList.add("activo");
      });
    }
  };

  // Escuchar cambios
  opcionesCombobox.addEventListener("change", actualizarCampos);

  // Ejecutar al inicio para aplicar el valor preseleccionado
  actualizarCampos();
}

// ================== COMBOBOX ADICIONAL (SOLO PARA CONTENEDOR viewParte3) ==================
const opcionesValoresPrueba = document.getElementById("opciones-combobox-ValoresPrueba");

// Diccionario SOLO para los fieldset de ValorPrueba51P
const mapaValoresPrueba = {
  "Fase R": ["FaseR_51P", "FaseR_50P1", "FaseR_50P2", "FaseR_50P3", "FaseR_51N", "FaseR_50N", "FaseR_67N1", "FaseR_67N2", "FaseR_46", "FaseR_59N1", "FaseR_59N2"],
  "Fase S": ["FaseS_51P", "FaseS_50P1", "FaseS_50P2", "FaseS_50P3", "FaseS_51N", "FaseS_50N", "FaseS_67N1", "FaseS_67N2", "FaseS_46", "FaseS_59N1", "FaseS_59N2"],
  "Fase T": ["FaseT_51P",  "FaseT_50P1", "FaseT_50P2", "FaseT_50P3", "FaseT_51N", "FaseT_50N", "FaseT_67N1", "FaseT_67N2", "FaseT_46", "FaseT_59N1", "FaseT_59N2"],
  "Fase Neutro": ["FaseNeutro_51P",  "FaseNeutro_50P1", "FaseNeutro_50P2", "FaseNeutro_50P3", "FaseNeutro_51N", "FaseNeutro_50N", "FaseNeutro_67N1", "FaseNeutro_67N2", "FaseNeutro_46", "FaseNeutro_59N1", "FaseNeutro_59N2"],
};

if (opcionesValoresPrueba) {
  const actualizarFases = () => {
    const seleccion = opcionesValoresPrueba.value;

    // Ocultar TODOS los fieldsets dentro de ValorPrueba51P
    Object.values(mapaValoresPrueba).flat().forEach(id => {
      const el = document.getElementById(id);
      if (el) el.classList.remove("activo");
    });

    // Mostrar el/los que correspondan
    if (mapaValoresPrueba[seleccion]) {
      mapaValoresPrueba[seleccion].forEach(id => {
        const el = document.getElementById(id);
        if (el) el.classList.add("activo");
      });
    }
  };

  opcionesValoresPrueba.addEventListener("change", actualizarFases);
  actualizarFases();
}

// ================== COMBOBOX NUEVO (SOLO PARA FORMULARIO DE CAMBIO DE AJUSTE ==================
const opcionesNuevo = document.getElementById("opciones-combobox-Nuevo");

// Diccionario SOLO para este nuevo formulario
const mapaNuevo = {
  "Sobrecorriente de fases 51P": ["Sobrecorriente51P", "Observaciones51P"],
  "Sobrecorriente de fases 50P-2": ["Sobrecorriente50P2", "Observaciones50P2"],
  "Sobrecorriente de fases 50P-3": ["Sobrecorriente50P3", "Observaciones50P3"],
  "Sobrecorriente de fases 50P-1": ["Sobrecorriente50P1", "Observaciones50P1"],
  "Falla a tierra 67N-1": ["FallaTierra67N1", "Observaciones67N1"],
  "Falla a tierra 67N-2": ["FallaTierra67N2", "Observaciones67N2"],
  "Falla a tierra 50N": ["FallaTierra50N", "Observaciones50N"],
  "Falla a tierra 51N": ["FallaTierra51N", "Observaciones51N"],
  "Tension homopolar 59N-1": ["TensionHomopolar59N1", "Observaciones59N1"],
  "Tension homopolar 59N-2": ["TensionHomopolar59N2", "Observaciones59N2"],
};

if (opcionesNuevo) {
  const actualizarNuevo = () => {
    const seleccion = opcionesNuevo.value;

    // Ocultar TODOS los fieldsets de este mapa
    Object.values(mapaNuevo).flat().forEach(id => {
      const el = document.getElementById(id);
      if (el) el.classList.remove("activo");
    });

    // Mostrar solo los que correspondan
    if (mapaNuevo[seleccion]) {
      mapaNuevo[seleccion].forEach(id => {
        const el = document.getElementById(id);
        if (el) el.classList.add("activo");
      });
    }
  };

  opcionesNuevo.addEventListener("change", actualizarNuevo);
  actualizarNuevo(); // Ejecutar al inicio por si hay valor predefinido
}

// =============================
// Navegación interna del formulario
// Botón "Siguiente" en contenedores de formulario protocolo
// Función única para avanzar a una vista concreta
// --------------------------------------------------
function mostrarSiguiente(targetId) {
  const target = document.getElementById(targetId);
  if (!target) {
    console.error("mostrarSiguiente: no existe el target ->", targetId);
    return;
  }

  // Si quieres ocultar pestañas/header cuando entras a formularios:
  if (targetId.startsWith("viewParte")) {
    if (mainTabs) mainTabs.classList.add("hidden-tabs");
    if (header) header.classList.add("hidden");
  } else {
    if (mainTabs) mainTabs.classList.remove("hidden-tabs");
    if (header) header.classList.remove("hidden");
  }

  // usa tu showView existente para hacer el cambio (añade actives)
  showView(target);

// ✨ SOLUCIÓN AL PROBLEMA DE SCROLL ✨
    // Forzar el desplazamiento de la ventana a la parte superior (coordenadas 0, 0)
    window.scrollTo(0, 0);

    // Opcional: Si quieres un efecto de desplazamiento más suave:
    /*
    window.scrollTo({
        top: 0,
        behavior: 'smooth' 
    });
    */
}

// ===========================
//🔹 FUNCIÓN: VALIDAR CAMPOS REQUIRED (GENERAL)
// ===========================

// Función para obtener el texto del label asociado a un campo
function obtenerLabel(campoId) {  
  const label = document.querySelector(`label[for="${campoId}"]`);
  return label ? label.textContent.trim() : campoId;
}

// ===========================
// 🔹 FUNCIÓN: MOSTRAR ERROR EN UN CAMPO (UNIFICADA)
// ===========================
function mostrarErrorCampo(campo, mensaje = "Completa este campo obligatorio.") {
  if (!campo) return;

  // Elimina mensajes previos del mismo campo
  const msgPrevio = campo.nextElementSibling;
  if (msgPrevio && msgPrevio.classList.contains("mensaje-error")) {
    msgPrevio.remove();
  }

  // Marca visualmente el campo
  campo.classList.add("campo-invalido");

  // Crea el mensaje de error
  const msg = document.createElement("div");
  msg.className = "mensaje-error";
  msg.textContent = mensaje;

  // Intentar insertar después del campo
  try {
    campo.insertAdjacentElement("afterend", msg);
  } catch (e) {
    console.warn("No se pudo insertar mensaje después del campo:", campo.id, e);
    campo.parentNode.appendChild(msg); // plan B
  }

  // Escuchar cambios para limpiar error
  campo.addEventListener("input", () => {
    campo.classList.remove("campo-invalido");
    if (msg.parentNode) msg.remove();
  }, { once: true });
}

// ===========================
// 🔹 FUNCIÓN: VALIDAR CAMPOS REQUIRED (GENERAL)
// ===========================
function validarCamposRequeridos(vistaActual) {
  // Limpia advertencias previas dentro de la vista
  vistaActual.querySelectorAll(".campo-invalido").forEach(c => c.classList.remove("campo-invalido"));
  vistaActual.querySelectorAll(".mensaje-error").forEach(m => m.remove());

  const campos = Array.from(vistaActual.querySelectorAll("[required]")).filter(el => el.offsetParent !== null);
  const camposInvalidos = [];

  campos.forEach(campo => {
    const label = obtenerLabel(campo.id) || campo.name || campo.id;
    const valor = (campo.value || "").toString().trim();

    if (!valor) {
      camposInvalidos.push({ campo, label });
      mostrarErrorCampo(campo);
    }
  });

  if (camposInvalidos.length > 0) {
    mostrarMensaje(
      `⚠️ Debes completar los campos obligatorios: ${camposInvalidos.map(i => i.label).join(", ")}.`,
      "error"
    );
    scrollToElement(camposInvalidos[0].campo);
    return false;
  }

  return true;
}

  // Pares corriente-tiempo o tension-tiempo
  function validarCruces() {
  const paresCorrienteTiempo = [
    ["FRCorriente51P1", "FRTiempo51P1"],
    ["FRCorriente51P2", "FRTiempo51P2"],
    ["FRCorriente51P3", "FRTiempo51P3"],
    ["FSCorriente51P1", "FSTiempo51P1"],
    ["FSCorriente51P2", "FSTiempo51P2"],
    ["FSCorriente51P3", "FSTiempo51P3"],
    ["FTCorriente51P1", "FTTiempo51P1"],
    ["FTCorriente51P2", "FTTiempo51P2"],
    ["FTCorriente51P3", "FTTiempo51P3"],
    ["FNCorriente51P1", "FNTiempo51P1"],
    ["FNCorriente51P2", "FNTiempo51P2"],
    ["FNCorriente51P3", "FNTiempo51P3"],
    ["FRCorriente50P11",  "FRTiempo50P11"],
    ["FRCorriente50P12", "FRTiempo50P12"],
    ["FRCorriente50P13", "FRTiempo50P13"],
    ["FSCorriente50P11", "FSTiempo50P11"],
    ["FSCorriente50P12", "FSTiempo50P12"],
    ["FSCorriente50P13", "FSTiempo50P13"],
    ["FTCorriente50P11", "FTTiempo50P11"],
    ["FTCorriente50P12", "FTTiempo50P12"],
    ["FTCorriente50P13", "FTTiempo50P13"],
    ["FNCorriente50P11", "FNTiempo50P11"],
    ["FNCorriente50P12", "FNTiempo50P12"],
    ["FNCorriente50P13", "FNTiempo50P13"],
    ["FRCorriente50P21", "FRTiempo50P21"],
    ["FRCorriente50P22", "FRTiempo50P22"],
    ["FRCorriente50P23", "FRTiempo50P23"],
    ["FSCorriente50P21", "FSTiempo50P21"],
    ["FSCorriente50P22", "FSTiempo50P22"],
    ["FSCorriente50P23", "FSTiempo50P23"],
    ["FTCorriente50P21", "FTTiempo50P21"],
    ["FTCorriente50P22", "FTTiempo50P22"],
    ["FTCorriente50P23", "FTTiempo50P23"],
    ["FNCorriente50P21", "FNTiempo50P21"],
    ["FNCorriente50P22", "FNTiempo50P22"],
    ["FNCorriente50P23", "FNTiempo50P23"],
    ["FRCorriente50P31", "FRTiempo50P31"],
    ["FRCorriente50P32", "FRTiempo50P32"],
    ["FRCorriente50P33", "FRTiempo50P33"],
    ["FSCorriente50P31", "FSTiempo50P31"],
    ["FSCorriente50P32", "FSTiempo50P32"],
    ["FSCorriente50P33", "FSTiempo50P33"],
    ["FTCorriente50P31", "FTTiempo50P31"],
    ["FTCorriente50P32", "FTTiempo50P32"],
    ["FTCorriente50P33", "FTTiempo50P33"],
    ["FNCorriente50P31", "FNTiempo50P31"],
    ["FNCorriente50P32", "FNTiempo50P32"],
    ["FNCorriente50P33", "FNTiempo50P33"],
    ["FRCorriente51N1", "FRTiempo51N1"],
    ["FRCorriente51N2", "FRTiempo51N2"],
    ["FRCorriente51N3", "FRTiempo51N3"],
    ["FSCorriente51N1", "FSTiempo51N1"],
    ["FSCorriente51N2", "FSTiempo51N2"],
    ["FSCorriente51N3", "FSTiempo51N3"],
    ["FTCorriente51N1", "FTTiempo51N1"],
    ["FTCorriente51N2", "FTTiempo51N2"],
    ["FTCorriente51N3", "FTTiempo51N3"],
    ["FNCorriente51N1", "FNTiempo51N1"],
    ["FNCorriente51N2", "FNTiempo51N2"],
    ["FNCorriente51N3", "FNTiempo51N3"],
    ["FRCorriente50N1", "FRTiempo50N1"],
    ["FRCorriente50N2", "FRTiempo50N2"],
    ["FRCorriente50N3", "FRTiempo50N3"],
    ["FSCorriente50N1", "FSTiempo50N1"],
    ["FSCorriente50N2", "FSTiempo50N2"],
    ["FSCorriente50N3", "FSTiempo50N3"],
    ["FTCorriente50N1", "FTTiempo50N1"],
    ["FTCorriente50N2", "FTTiempo50N2"],
    ["FTCorriente50N3", "FTTiempo50N3"],
    ["FNCorriente50N1", "FNTiempo50N1"],
    ["FNCorriente50N2", "FNTiempo50N2"],
    ["FNCorriente50N3", "FNTiempo50N3"],
    ["FRCorriente461", "FRTiempo461"],
    ["FRCorriente462", "FRTiempo462"],
    ["FRCorriente463", "FRTiempo463"],
    ["FSCorriente461", "FSTiempo461"],
    ["FSCorriente462", "FSTiempo462"],
    ["FSCorriente463", "FSTiempo463"],
    ["FTCorriente461", "FTTiempo461"],
    ["FTCorriente462", "FTTiempo462"],
    ["FTCorriente463", "FTTiempo463"],
    ["FNCorriente461", "FNTiempo461"],
    ["FNCorriente462", "FNTiempo462"],
    ["FNCorriente463", "FNTiempo463"],
    ["FRTension59N11", "FRTiempo59N11"],
    ["FRTension59N12", "FRTiempo59N12"],
    ["FRTension59N13", "FRTiempo59N13"],
    ["FSTension59N11", "FSTiempo59N11"],
    ["FSTension59N12", "FSTiempo59N12"],
    ["FSTension59N13", "FSTiempo59N13"],
    ["FTTension59N11", "FTTiempo59N11"],
    ["FTTension59N12", "FTTiempo59N12"],
    ["FTTension59N13", "FTTiempo59N13"],
    ["FNTension59N11", "FNTiempo59N11"],
    ["FNTension59N12", "FNTiempo59N12"],
    ["FNTension59N13", "FNTiempo59N13"],
    ["FRTension59N21", "FRTiempo59N21"],
    ["FRTension59N22", "FRTiempo59N22"],
    ["FRTension59N23", "FRTiempo59N23"],
    ["FSTension59N21", "FSTiempo59N21"],
    ["FSTension59N22", "FSTiempo59N22"],
    ["FSTension59N23", "FSTiempo59N23"],
    ["FTTension59N21", "FTTiempo59N21"],
    ["FTTension59N22", "FTTiempo59N22"],
    ["FTTension59N23", "FTTiempo59N23"],
    ["FNTension59N21", "FNTiempo59N21"],
    ["FNTension59N22", "FNTiempo59N22"],
    ["FNTension59N23", "FNTiempo59N23"]
  ];

  let erroresTiempo = [];

  for (const [campoId, tiempoId] of paresCorrienteTiempo) {
    const campo = getFieldValue(campoId);
    const tiempo = getFieldValue(tiempoId);

    if (campo && !tiempo) {
      const campoTiempo = document.getElementById(tiempoId);
      mostrarErrorCampo(campoTiempo, "Completa este campo obligatorio.");
      erroresTiempo.push(obtenerLabel(campoId));
    }
  }

  // Grupos corriente-3uo-tiempo
  const gruposCorriente3uoTiempo = [
    ["FRCorriente67N11", "FR3Uo67N11", "FRTiempo67N11"],
    ["FRCorriente67N12", "FR3Uo67N12", "FRTiempo67N12"],
    ["FRCorriente67N13", "FR3Uo67N13", "FRTiempo67N13"],
    ["FSCorriente67N11", "FS3Uo67N11", "FSTiempo67N11"],
    ["FSCorriente67N12", "FS3Uo67N12", "FSTiempo67N12"],
    ["FSCorriente67N13", "FS3Uo67N13", "FSTiempo67N13"],
    ["FTCorriente67N11", "FT3Uo67N11", "FTTiempo67N11"],
    ["FTCorriente67N12", "FT3Uo67N12", "FTTiempo67N12"],
    ["FTCorriente67N13", "FT3Uo67N13", "FTTiempo67N13"],
    ["FNCorriente67N11", "FN3Uo67N11", "FNTiempo67N11"],
    ["FNCorriente67N12", "FN3Uo67N12", "FNTiempo67N12"],
    ["FNCorriente67N13", "FN3Uo67N13", "FNTiempo67N13"],
    ["FRCorriente67N21", "FR3Uo67N21", "FRTiempo67N21"],
    ["FRCorriente67N22", "FR3Uo67N22", "FRTiempo67N22"],
    ["FRCorriente67N23", "FR3Uo67N23", "FRTiempo67N23"],
    ["FSCorriente67N21", "FS3Uo67N21", "FSTiempo67N21"],
    ["FSCorriente67N22", "FS3Uo67N22", "FSTiempo67N22"],
    ["FSCorriente67N23", "FS3Uo67N23", "FSTiempo67N23"],
    ["FTCorriente67N21", "FT3Uo67N21", "FTTiempo67N21"],
    ["FTCorriente67N22", "FT3Uo67N22", "FTTiempo67N22"],
    ["FTCorriente67N23", "FT3Uo67N23", "FTTiempo67N23"],
    ["FNCorriente67N21", "FN3Uo67N21", "FNTiempo67N21"],
    ["FNCorriente67N22", "FN3Uo67N22", "FNTiempo67N22"],
    ["FNCorriente67N23", "FN3Uo67N23", "FNTiempo67N23"]
  ];

   let errores3uoTiempo = [];

  for (const [corrienteId, tensionId, tiempoId] of gruposCorriente3uoTiempo) {
    const corriente = getFieldValue(corrienteId);
    const tension = getFieldValue(tensionId);
    const tiempo = getFieldValue(tiempoId);

    if (corriente && (!tension || !tiempo)) {
      if (!tension) mostrarErrorCampo(document.getElementById(tensionId), "Completa este campo obligatorio.");
      if (!tiempo) mostrarErrorCampo(document.getElementById(tiempoId), "Completa este campo obligatorio.");
      errores3uoTiempo.push(obtenerLabel(corrienteId));
    }
  }

// Mostrar mensajes generales
  if (erroresTiempo.length > 0) {
    mostrarMensaje(`⚠️ Debes llenar el campo de tiempo correspondiente a: ${erroresTiempo.join(", ")}.`, "error");
  }

  if (errores3uoTiempo.length > 0) {
    mostrarMensaje(`⚠️ Debes llenar los campos de 3Uo y tiempo correspondientes a: ${errores3uoTiempo.join(", ")}.`, "error");
  }

  // Si hay errores, detener el flujo
  if (erroresTiempo.length > 0 || errores3uoTiempo.length > 0) {
    const primerError = document.querySelector(".campo-invalido");
    if (primerError) scrollToElement(primerError);
    return false;
  }

  return true;
}

// =============================
// Enlazar todos los botones "Siguiente" con validación + scroll
// =============================
document.querySelectorAll('.btn-next').forEach(btn => {
  btn.type = btn.getAttribute('type') || 'button';
  const target = btn.dataset?.target;
  btn.addEventListener('click', e => {
    const vistaActual = btn.closest('.view');
    if (!vistaActual) return;

    // Validar required en la vista actual
    const okReq = validarCamposRequeridos(vistaActual);
    if (!okReq) {
      e.preventDefault();
      // mostrarMensaje ya fue llamado internamente por validarCamposRequeridos
      return;
    }

    // validación cruzada que afecte a esta vista:
    // NOTA: si la validación cruzada involucra campos que están en otra vista,
    // quizá no quieras impedir avanzar aquí. Ajusta si es necesario.
    const okCruces = validarCruces();
    if (!okCruces) {
      e.preventDefault();
      return;
    }

    // Si todo OK, navegar
    if (target && typeof mostrarVista === 'function') {
      mostrarVista(target);
    } else if (typeof mostrarSiguiente === 'function') {
      mostrarSiguiente(target);
    } else if (typeof showNext === 'function') {
      showNext();
    } else {
      // Fallback: usar showView
      if (target) {
        const elTarget = document.getElementById(target);
        if (elTarget) showView(elTarget);
      }
    }
  });
});

// Diccionario de trabajadores con su código LDS y correo
const trabajadores = {
  "Raúl Ames": {codigo: "8281", correo: "rames@luzdelsur.com.pe"},
  "José Auccatoma": {codigo: "8121", correo: "jauccato@luzdelsur.com.pe"},
  "Gilber Mendoza": {codigo: "8012", correo: "gmendoza@luzdelsur.com.pe"},
  "Carlos Muñoz": {codigo: "8186", correo: "cmunoz@luzdelsur.com.pe"},
  "Evelio Salvador": {codigo: "7902", correo: "esalvado@luzdelsur.com.pe"},
  "Noe Santos": { codigo: "5894", correo: "nsantos@luzdelsur.com.pe"},
  "Carlos Vizcarra": {codigo: "5573", correo:"cvizcarr@luzdelsur.com.pe"}
};

// Función genérica para enlazar un combo de nombre con sus campos (código y correo)
function conectarTrabajador(nombreId, codigoId, correoId) {
  const selectNombre = document.getElementById(nombreId);
  const inputCodigo = document.getElementById(codigoId);
  const inputCorreo = document.getElementById(correoId);

  if (!selectNombre) return;

  const actualizarDatos = () => {
    const seleccionado = selectNombre.value;
    const datos = trabajadores[seleccionado];

    if (inputCodigo) inputCodigo.value = datos ? datos.codigo : "";
    if (inputCorreo) inputCorreo.value = datos ? datos.correo : "";
  };

  // Cuando cambie el nombre, actualiza todo
  selectNombre.addEventListener("change", actualizarDatos);

  // Ejecutar al inicio
  actualizarDatos();
}

// Conectamos los pares que quieras
conectarTrabajador("Nombre1", "CodigoLDS1", "Correo1");
conectarTrabajador("Nombre2", "CodigoLDS2", "Correo2");
conectarTrabajador("Nombre1CA", "", "Correo1CA");
conectarTrabajador("Nombre2CA", "", "Correo2CA");

// =============================
// 🟩 FUNCIONES GLOBALES (una sola vez)
// =============================

// Mensajes tipo toast
function mostrarMensaje(mensaje, tipo = "success") {
  const toast = document.createElement("div");
  toast.className = `toast ${tipo}`;
  toast.textContent = mensaje;
  document.body.appendChild(toast);

  setTimeout(() => toast.classList.add("show"), 100);
  setTimeout(() => {
    toast.classList.remove("show");
    setTimeout(() => toast.remove(), 400);
  }, 5000);
}

// =============================
// FUNCIÓN PARA LIMPIAR CAMPOS DEL FORMULARIO ACTUAL
// =============================
function limpiarFormulario(vista) {
  // Determinar qué campos conservar según la vista actual
  const camposExcluidos = vista.id.startsWith("viewParte")
    ? ["CodigoUnico", "fecha", "semana", "hora"]
    : ["CodigoUnicoCA", "fechaCA", "SemanaCA"];

  // Recorre todos los campos de la vista actual
  vista.querySelectorAll("input, select, textarea").forEach(el => {
    // Si el campo está en la lista de excluidos → no lo limpies
    if (camposExcluidos.includes(el.id)) return;

    // Limpieza según el tipo de campo
    if (el.type === "checkbox" || el.type === "radio") {
      el.checked = false;
    } else if (el.tagName.toLowerCase() === "select") {
      el.selectedIndex = 0;
    } else {
      el.value = "";
    }
  });
}

// =============================
// 🟦 FUNCIÓN GENÉRICA DE ENVÍO (común a todos los formularios)
// =============================
async function enviarFormulario(btn, campos, urlFlujo) {
  btn.disabled = true;
  btn.innerText = "Enviando...";

  try {
    const vistaActual = btn.closest(".view");

    if (!validarCamposRequeridos(vistaActual)) {
      return;
    }

    const datos = {};
    campos.forEach(id => {
    const el = document.getElementById(id);
    if (el && "value" in el) {
    datos[id] = el.value.trim() || "";
  } else {
    console.warn(`⚠️ Elemento con id "${id}" no tiene propiedad 'value' o no existe.`);
    }
  });

    const response = await fetch(urlFlujo, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(datos)
    });

    if (response.ok) {
      mostrarMensaje("✅ Datos enviados con éxito");
      limpiarFormulario(vistaActual);

    // ✅ Restaurar solo la fecha correspondiente
      const hoy = new Date();
      const fechaHoy = `${hoy.getFullYear()}-${String(hoy.getMonth() + 1).padStart(2, "0")}-${String(hoy.getDate()).padStart(2, "0")}`;

      if (vistaActual.id.startsWith("viewParte")) {
        const fechaInput = document.getElementById("fecha");
        if (fechaInput) fechaInput.value = fechaHoy;
        if (typeof inicializarFechaYSemana === "function") inicializarFechaYSemana("fecha", "semana");
      }

      if (vistaActual.id === "viewCambioAjuste") {
        const fechaCAInput = document.getElementById("fechaCA");
        if (fechaCAInput) fechaCAInput.value = fechaHoy;
        if (typeof inicializarFechaYSemana === "function") inicializarFechaYSemana("fechaCA", "SemanaCA");
      }

      // 👇 Luego de enviar, volver a la vista principal
      mainTabs.classList.remove("hidden-tabs");
      header.classList.remove("hidden");
      showView(document.getElementById("viewFormatos"));
    } else {
      mostrarMensaje("❌ Error al enviar datos", "error");
    }
  } catch (error) {
    console.error("Error en fetch:", error);
    mostrarMensaje("⚠️ Hubo un problema con la conexión", "error");
  } finally {
    btn.disabled = false;
    btn.innerText = "Enviar";
  }
}

// =============================
// 🟧 ENVÍO FORMULARIO 1 (viewParte1–4)
// =============================
document.getElementById("enviarBtn").addEventListener("click", (e) => {
  e.preventDefault();
  enviarFormulario(
    e.target,
    [
      "CodigoUnico","sed","alim","nodofinal","enlace","circuito","fecha","semana","hora","tension","Celda",
      "equipo","tipoprueba","kardexrele","marcarele","modelorele","serierele","CapacidadR","CapacidadT",
      "VnRele","AlimentacionRele","AnioFabricacionRele","kardexequipo","marcaequipo","modeloequipo","Tiporele","serieequipo","Inominal","ruptura","Tnominal","extincion","AnioFabricacionEquipo","marcatoroidal","ClaseToroidal","RelConectToroidal","marcaTC","InstalacionTC","ClaseTC","InomPrim","InomSec",
      "RelConectTC","marcaTT","ClaseTT","VnomPrim","VnomSec","RelConectTT","CurvaRecomendado51P","IPrimRecomendado51P","ISecRecomendado51P","TMSRecomendado51P","Recomendado3Uo51P","ForwardRecomendado51P","AnguloRecomendado51P","CurvaRealizado51P","IPrimRealizado51P","ISecRealizado51P","TMSRealizado51P","Realizado3Uo51P","ForwardRealizado51P","AnguloRealizado51P",
      "CurvaRecomendado50P1","IPrimRecomendado50P1","ISecRecomendado50P1","TMSRecomendado50P1","Recomendado3Uo50P1","ForwardRecomendado50P1","AnguloRecomendado50P1","CurvaRealizado50P1","IPrimRealizado50P1","ISecRealizado50P1","TMSRealizado50P1","Realizado3Uo50P1","ForwardRealizado50P1","AnguloRealizado50P1",
      "CurvaRecomendado50P2","IPrimRecomendado50P2","ISecRecomendado50P2","TMSRecomendado50P2","Recomendado3Uo50P2","ForwardRecomendado50P2","AnguloRecomendado50P2","CurvaRealizado50P2","IPrimRealizado50P2","ISecRealizado50P2","TMSRealizado50P2","Realizado3Uo50P2","ForwardRealizado50P2","AnguloRealizado50P2",
      "CurvaRecomendado50P3","IPrimRecomendado50P3","ISecRecomendado50P3","TMSRecomendado50P3","Recomendado3Uo50P3","ForwardRecomendado50P3","AnguloRecomendado50P3","CurvaRealizado50P3","IPrimRealizado50P3","ISecRealizado50P3","TMSRealizado50P3","Realizado3Uo50P3","ForwardRealizado50P3","AnguloRealizado50P3",
      "CurvaRecomendado51N","IPrimRecomendado51N","ISecRecomendado51N","TMSRecomendado51N","Recomendado3Uo51N","ForwardRecomendado51N","AnguloRecomendado51N","CurvaRealizado51N","IPrimRealizado51N","ISecRealizado51N","TMSRealizado51N","Realizado3Uo51N","ForwardRealizado51N","AnguloRealizado51N",
      "CurvaRecomendado50N","IPrimRecomendado50N","ISecRecomendado50N","TMSRecomendado50N","Recomendado3Uo50N","ForwardRecomendado50N","AnguloRecomendado50N","CurvaRealizado50N","IPrimRealizado50N","ISecRealizado50N","TMSRealizado50N","Realizado3Uo50N","ForwardRealizado50N","AnguloRealizado50N",
      "CurvaRecomendado67N1","IPrimRecomendado67N1","ISecRecomendado67N1","TMSRecomendado67N1","Recomendado3Uo67N1","ForwardRecomendado67N1","AnguloRecomendado67N1","CurvaRealizado67N1","IPrimRealizado67N1","ISecRealizado67N1","TMSRealizado67N1","Realizado3Uo67N1","ForwardRealizado67N1","AnguloRealizado67N1",
      "CurvaRecomendado67N2","IPrimRecomendado67N2","ISecRecomendado67N2","TMSRecomendado67N2","Recomendado3Uo67N2","ForwardRecomendado67N2","AnguloRecomendado67N2","CurvaRealizado67N2","IPrimRealizado67N2","ISecRealizado67N2","TMSRealizado67N2","Realizado3Uo67N2","ForwardRealizado67N2","AnguloRealizado67N2",
      "CurvaRecomendado46","IPrimRecomendado46","ISecRecomendado46","TMSRecomendado46","Recomendado3Uo46","ForwardRecomendado46","AnguloRecomendado46","CurvaRealizado46","IPrimRealizado46","ISecRealizado46","TMSRealizado46","Realizado3Uo46","ForwardRealizado46","AnguloRealizado46",
      "CurvaRecomendado59N1","IPrimRecomendado59N1","ISecRecomendado59N1","TMSRecomendado59N1","Recomendado3Uo59N1","ForwardRecomendado59N1","AnguloRecomendado59N1","CurvaRealizado59N1","IPrimRealizado59N1","ISecRealizado59N1","TMSRealizado59N1","Realizado3Uo59N1","ForwardRealizado59N1","AnguloRealizado59N1",
      "CurvaRecomendado59N2","IPrimRecomendado59N2","ISecRecomendado59N2","TMSRecomendado59N2","Recomendado3Uo59N2","ForwardRecomendado59N2","AnguloRecomendado59N2","CurvaRealizado59N2","IPrimRealizado59N2","ISecRealizado59N2","TMSRealizado59N2","Realizado3Uo59N2","ForwardRealizado59N2","AnguloRealizado59N2",
      "FRCorriente51P1","FRTiempo51P1","FRCorriente51P2","FRTiempo51P2","FRCorriente51P3","FRTiempo51P3","FSCorriente51P1","FSTiempo51P1","FSCorriente51P2","FSTiempo51P2","FSCorriente51P3","FSTiempo51P3","FTCorriente51P1","FTTiempo51P1","FTCorriente51P2","FTTiempo51P2","FTCorriente51P3","FTTiempo51P3","FNCorriente51P1","FNTiempo51P1","FNCorriente51P2","FNTiempo51P2","FNCorriente51P3","FNTiempo51P3",
      "FRCorriente50P11","FRTiempo50P11","FRCorriente50P12","FRTiempo50P12","FRCorriente50P13","FRTiempo50P13","FSCorriente50P11","FSTiempo50P11","FSCorriente50P12","FSTiempo50P12","FSCorriente50P13","FSTiempo50P13","FTCorriente50P11","FTTiempo50P11","FTCorriente50P12","FTTiempo50P12","FTCorriente50P13","FTTiempo50P13","FNCorriente50P11","FNTiempo50P11","FNCorriente50P12","FNTiempo50P12","FNCorriente50P13","FNTiempo50P13",
      "FRCorriente50P21","FRTiempo50P21","FRCorriente50P22","FRTiempo50P22","FRCorriente50P23","FRTiempo50P23","FSCorriente50P21","FSTiempo50P21","FSCorriente50P22","FSTiempo50P22","FSCorriente50P23","FSTiempo50P23","FTCorriente50P21","FTTiempo50P21","FTCorriente50P22","FTTiempo50P22","FTCorriente50P23","FTTiempo50P23","FNCorriente50P21","FNTiempo50P21","FNCorriente50P22","FNTiempo50P22","FNCorriente50P23","FNTiempo50P23",
      "FRCorriente50P31","FRTiempo50P31","FRCorriente50P32","FRTiempo50P32","FRCorriente50P33","FRTiempo50P33","FSCorriente50P31","FSTiempo50P31","FSCorriente50P32","FSTiempo50P32","FSCorriente50P33","FSTiempo50P33","FTCorriente50P31","FTTiempo50P31","FTCorriente50P32","FTTiempo50P32","FTCorriente50P33","FTTiempo50P33","FNCorriente50P31","FNTiempo50P31","FNCorriente50P32","FNTiempo50P32","FNCorriente50P33","FNTiempo50P33",
      "FRCorriente51N1","FRTiempo51N1","FRCorriente51N2","FRTiempo51N2","FRCorriente51N3","FRTiempo51N3","FSCorriente51N1","FSTiempo51N1","FSCorriente51N2","FSTiempo51N2","FSCorriente51N3","FSTiempo51N3","FTCorriente51N1","FTTiempo51N1","FTCorriente51N2","FTTiempo51N2","FTCorriente51N3","FTTiempo51N3","FNCorriente51N1","FNTiempo51N1","FNCorriente51N2","FNTiempo51N2","FNCorriente51N3","FNTiempo51N3",
      "FRCorriente50N1","FRTiempo50N1","FRCorriente50N2","FRTiempo50N2","FRCorriente50N3","FRTiempo50N3","FSCorriente50N1","FSTiempo50N1","FSCorriente50N2","FSTiempo50N2","FSCorriente50N3","FSTiempo50N3","FTCorriente50N1","FTTiempo50N1","FTCorriente50N2","FTTiempo50N2","FTCorriente50N3","FTTiempo50N3","FNCorriente50N1","FNTiempo50N1","FNCorriente50N2","FNTiempo50N2","FNCorriente50N3","FNTiempo50N3",
      "FRCorriente67N11","FR3Uo67N11","FRTiempo67N11","FRCorriente67N12","FR3Uo67N12","FRTiempo67N12","FRCorriente67N13","FR3Uo67N13","FRTiempo67N13","FSCorriente67N11","FS3Uo67N11","FSTiempo67N11","FSCorriente67N12","FS3Uo67N12","FSTiempo67N12","FSCorriente67N13","FS3Uo67N13","FSTiempo67N13","FTCorriente67N11","FT3Uo67N11","FTTiempo67N11","FTCorriente67N12","FT3Uo67N12","FTTiempo67N12","FTCorriente67N13","FT3Uo67N13","FTTiempo67N13","FNCorriente67N11","FN3Uo67N11","FNTiempo67N11","FNCorriente67N12","FN3Uo67N12","FNTiempo67N12","FNCorriente67N13","FN3Uo67N13","FNTiempo67N13",
      "FRCorriente67N21","FR3Uo67N21","FRTiempo67N21","FRCorriente67N22","FR3Uo67N22","FRTiempo67N22","FRCorriente67N23","FR3Uo67N23","FRTiempo67N23","FSCorriente67N21","FS3Uo67N21","FSTiempo67N21","FSCorriente67N22","FS3Uo67N22","FSTiempo67N22","FSCorriente67N23","FS3Uo67N23","FSTiempo67N23","FTCorriente67N21","FT3Uo67N21","FTTiempo67N21","FTCorriente67N22","FT3Uo67N22","FTTiempo67N22","FTCorriente67N23","FT3Uo67N23","FTTiempo67N23","FNCorriente67N21","FN3Uo67N21","FNTiempo67N21","FNCorriente67N22","FN3Uo67N22","FNTiempo67N22","FNCorriente67N23","FN3Uo67N23","FNTiempo67N23",
      "FRCorriente461","FRTiempo461","FRCorriente462","FRTiempo462","FRCorriente463","FRTiempo463","FSCorriente461","FSTiempo461","FSCorriente462","FSTiempo462","FSCorriente463","FSTiempo463","FTCorriente461","FTTiempo461","FTCorriente462","FTTiempo462","FTCorriente463","FTTiempo463","FNCorriente461","FNTiempo461","FNCorriente462","FNTiempo462","FNCorriente463","FNTiempo463",
      "FRTension59N11","FRTiempo59N11","FRTension59N12","FRTiempo59N12","FRTension59N13","FRTiempo59N13","FSTension59N11","FSTiempo59N11","FSTension59N12","FSTiempo59N12","FSTension59N13","FSTiempo59N13","FTTension59N11","FTTiempo59N11","FTTension59N12","FTTiempo59N12","FTTension59N13","FTTiempo59N13","FNTension59N11","FNTiempo59N11","FNTension59N12","FNTiempo59N12","FNTension59N13","FNTiempo59N13",
      "FRTension59N21","FRTiempo59N21","FRTension59N22","FRTiempo59N22","FRTension59N23","FRTiempo59N23","FSTension59N21","FSTiempo59N21","FSTension59N22","FSTiempo59N22","FSTension59N23","FSTiempo59N23","FTTension59N21","FTTiempo59N21","FTTension59N22","FTTiempo59N22","FTTension59N23","FTTiempo59N23","FNTension59N21","FNTiempo59N21","FNTension59N22","FNTiempo59N22","FNTension59N23","FNTiempo59N23",
      "ActivacionArranqueFallas","AnguloPolarizacion","Observaciones", "Pregunta1","Pregunta2","Pregunta3","Pregunta4","Pregunta5","Pregunta6","Pregunta7","Pregunta8",
      "Pregunta9","Pregunta10","Pregunta11","Pregunta12","Pregunta13","Pregunta14","Pregunta15","Pregunta16","Pregunta17","Pregunta18","Pregunta19","Pregunta20","Pregunta21","Pregunta22","Pregunta23","Pregunta24",
      "Pregunta25","Pregunta26","Pregunta27","Pregunta28","Pregunta29","Pregunta30","Pregunta31","TipoProteccion","OtrasObservaciones","Nombre1","CodigoLDS1","Nombre2","CodigoLDS2","Correo1","Correo2"
    ],
    "https://default1c0051dd45964b1a9849d060735057.69.environment.api.powerplatform.com:443/powerautomate/automations/direct/workflows/e30b9abb12584fbaa6939129547bb248/triggers/manual/paths/invoke?api-version=1&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=2ONLDOmbTWMdxkm4zDsj2Sd0P7zcPx1078HJmoEHMlo"
  );
});

// =============================
// 🟥 ENVÍO FORMULARIO 2 (viewCambioAjuste)
// =============================
document.getElementById("enviarBtn2").addEventListener("click", (e) => {
  e.preventDefault();
  enviarFormulario(
    e.target,
    [
      "CodigoUnicoCA", "codigo", "Alimentador", "NodofinalCA", "CircuitoCA", "celdaCA", "MedicionFasesTC1", "MedicionFasesTC2", "MedicionHomopolarTC1", "MedicionHomopolarTC2", "MedicionFasesTT1", "MedicionFasesTT2", "MedicionHomopolarTT1", "MedicionHomopolarTT2",
      "MarcaCA", "ModeloCA", "InFasesCA", "InNeutroCA","VnReleCA", "NFabrica", "NCatalogo", "NKardexCA", "TensionAlimentacionCA", "CurveType51PSolicitado", "StartValue51PSolicitado", "Time51PSolicitado", "DelayTime51PSolicitado", "DirectionalMode51PSolicitado", "Characteristic51PSolicitado",
      "Voltage51PSolicitado", "CurveType51PRealizado", "StartValue51PRealizado", "Time51PRealizado", "DelayTime51PRealizado", "DirectionalMode51PRealizado", "Characteristic51PRealizado", "Voltage51PRealizado", "Observaciones51P", "CurveType50P2Solicitado", "StartValue50P2Solicitado", "Time50P2olicitado",
      "DelayTime50P2Solicitado", "DirectionalMode50P2Solicitado", "Characteristic50P2Solicitado", "Voltage50P2Solicitado", "CurveType50P2Realizado", "StartValue50P2Realizado", "Time50P2Realizado", "DelayTime50P2Realizado", "DirectionalMode50P2Realizado", "Characteristic50P2Realizado", "Voltage50P2Realizado",
      "Observaciones50P2", "CurveType50P3Solicitado", "StartValue50P3Solicitado", "Time50P3Solicitado", "DelayTime50P3Solicitado", "DirectionalMode50P3Solicitado", "Characteristic50P3Solicitado", "Voltage50P3Solicitado", "CurveType50P3Realizado", "StartValue50P3Realizado", "Time50P3Realizado", "DelayTime50P3Realizado",
      "DirectionalMode50P3Realizado", "Characteristic50P3Realizado", "Voltage50P3Realizado", "Observaciones50P3", "StartValue50P1Solicitado", "DelayTime50P1Solicitado", "StartValue50P1Realizado", "DelayTime50P1Realizado", "Observaciones50P1", "CurveType67N1Solicitado", "StartValue67N1Solicitado", "Time67N1Solicitado",
      "DelayTime67N1Solicitado", "DirectionalMode67N1Solicitado", "Characteristic67N1Solicitado", "Voltage67N1Solicitado", "CurveType67N1Realizado", "StartValue67N1Realizado", "Time67N1Realizado", "DelayTime67N1Realizado", "DirectionalMode67N1Realizado", "Characteristic67N1Realizado", "Voltage67N1Realizado", "Observaciones67N1",
      "CurveType67N2Solicitado", "StartValue67N2Solicitado", "Time67N2Solicitado", "DelayTime67N2Solicitado", "DirectionalMode67N2Solicitado", "Characteristic67N2Solicitado", "Voltage67N2Solicitado", "CurveType67N2Realizado", "StartValue67N2Realizado", "Time67N2Realizado", "DelayTime67N2Realizado", "DirectionalMode67N2Realizado",
      "Characteristic67N2Realizado", "Voltage67N2Realizado", "Observaciones67N2", "CurveType50NSolicitado", "StartValue50NSolicitado", "Time50NSolicitado", "DelayTime50NSolicitado", "DirectionalMode50NSolicitado", "Characteristic50NSolicitado", "Voltage50NSolicitado", "CurveType50NRealizado", "StartValue50NRealizado", "Time50NRealizado",
      "DelayTime50NRealizado", "DirectionalMode50NRealizado", "Characteristic50NRealizado", "Voltage50NRealizado", "Observaciones50N", "CurveType51NSolicitado", "StartValue51NSolicitado", "Time51NSolicitado", "DelayTime51NSolicitado", "CurveType51NRealizado", "StartValue51NRealizado", "Time51NRealizado", "DelayTime51NRealizado", "Observaciones51N",
      "StartValue59N1Solicitado", "DelayTime59N1Solicitado", "StartValue59N1Realizado", "DelayTime59N1Realizado", "Observaciones59N1", "StartValue59N2Solicitado", "DelayTime59N2Solicitado", "StartValue59N2Realizado", "DelayTime59N2Realizado", "Observaciones59N2", "fechaCA", "SemanaCA", "Nombre1CA", "Correo1CA", "Nombre2CA", "Correo2CA"
    ],
    "https://default1c0051dd45964b1a9849d060735057.69.environment.api.powerplatform.com:443/powerautomate/automations/direct/workflows/044b35f2957e4f09993d645b7c946ebf/triggers/manual/paths/invoke?api-version=1&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=m1y-2obOZX_EG4XwdLBCCyyiCqJqxFQT8HB6crZmYWs"
  );
});


